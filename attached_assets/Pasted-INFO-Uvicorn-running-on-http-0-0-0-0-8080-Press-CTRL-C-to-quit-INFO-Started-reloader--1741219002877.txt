INFO:     Uvicorn running on http://0.0.0.0:8080 (Press CTRL+C to quit)
INFO:     Started reloader process [1660] using StatReload
INFO:     Started server process [1672]
INFO:     Waiting for application startup.
2025-03-05 23:51:23,051 - app.main - INFO - Starting up Pienty.AI server...
2025-03-05 23:51:24,748 INFO sqlalchemy.engine.Engine select pg_catalog.version()
2025-03-05 23:51:24,748 - sqlalchemy.engine.Engine - INFO - select pg_catalog.version()
2025-03-05 23:51:24,748 INFO sqlalchemy.engine.Engine [raw sql] ()
2025-03-05 23:51:24,748 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-03-05 23:51:25,415 INFO sqlalchemy.engine.Engine select current_schema()
2025-03-05 23:51:25,415 - sqlalchemy.engine.Engine - INFO - select current_schema()
2025-03-05 23:51:25,415 INFO sqlalchemy.engine.Engine [raw sql] ()
2025-03-05 23:51:25,415 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-03-05 23:51:26,080 INFO sqlalchemy.engine.Engine show standard_conforming_strings
2025-03-05 23:51:26,080 - sqlalchemy.engine.Engine - INFO - show standard_conforming_strings
2025-03-05 23:51:26,080 INFO sqlalchemy.engine.Engine [raw sql] ()
2025-03-05 23:51:26,080 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-03-05 23:51:26,579 INFO sqlalchemy.engine.Engine BEGIN (implicit)
2025-03-05 23:51:26,579 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-03-05 23:51:26,583 INFO sqlalchemy.engine.Engine SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = $1::VARCHAR AND pg_catalog.pg_class.relkind = ANY (ARRAY[$2::VARCHAR, $3::VARCHAR, $4::VARCHAR, $5::VARCHAR, $6::VARCHAR]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != $7::VARCHAR
2025-03-05 23:51:26,583 - sqlalchemy.engine.Engine - INFO - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = $1::VARCHAR AND pg_catalog.pg_class.relkind = ANY (ARRAY[$2::VARCHAR, $3::VARCHAR, $4::VARCHAR, $5::VARCHAR, $6::VARCHAR]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != $7::VARCHAR
2025-03-05 23:51:26,583 INFO sqlalchemy.engine.Engine [generated in 0.00019s] ('promo_codes', 'r', 'p', 'f', 'v', 'm', 'pg_catalog')
2025-03-05 23:51:26,583 - sqlalchemy.engine.Engine - INFO - [generated in 0.00019s] ('promo_codes', 'r', 'p', 'f', 'v', 'm', 'pg_catalog')
2025-03-05 23:51:27,090 INFO sqlalchemy.engine.Engine SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = $1::VARCHAR AND pg_catalog.pg_class.relkind = ANY (ARRAY[$2::VARCHAR, $3::VARCHAR, $4::VARCHAR, $5::VARCHAR, $6::VARCHAR]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != $7::VARCHAR
2025-03-05 23:51:27,090 - sqlalchemy.engine.Engine - INFO - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = $1::VARCHAR AND pg_catalog.pg_class.relkind = ANY (ARRAY[$2::VARCHAR, $3::VARCHAR, $4::VARCHAR, $5::VARCHAR, $6::VARCHAR]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != $7::VARCHAR
2025-03-05 23:51:27,091 INFO sqlalchemy.engine.Engine [cached since 0.5076s ago] ('promo_code_usage', 'r', 'p', 'f', 'v', 'm', 'pg_catalog')
2025-03-05 23:51:27,091 - sqlalchemy.engine.Engine - INFO - [cached since 0.5076s ago] ('promo_code_usage', 'r', 'p', 'f', 'v', 'm', 'pg_catalog')
2025-03-05 23:51:27,258 INFO sqlalchemy.engine.Engine SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = $1::VARCHAR AND pg_catalog.pg_class.relkind = ANY (ARRAY[$2::VARCHAR, $3::VARCHAR, $4::VARCHAR, $5::VARCHAR, $6::VARCHAR]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != $7::VARCHAR
2025-03-05 23:51:27,258 - sqlalchemy.engine.Engine - INFO - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = $1::VARCHAR AND pg_catalog.pg_class.relkind = ANY (ARRAY[$2::VARCHAR, $3::VARCHAR, $4::VARCHAR, $5::VARCHAR, $6::VARCHAR]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != $7::VARCHAR
2025-03-05 23:51:27,258 INFO sqlalchemy.engine.Engine [cached since 0.6748s ago] ('user_organizations', 'r', 'p', 'f', 'v', 'm', 'pg_catalog')
2025-03-05 23:51:27,258 - sqlalchemy.engine.Engine - INFO - [cached since 0.6748s ago] ('user_organizations', 'r', 'p', 'f', 'v', 'm', 'pg_catalog')
2025-03-05 23:51:27,427 INFO sqlalchemy.engine.Engine SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = $1::VARCHAR AND pg_catalog.pg_class.relkind = ANY (ARRAY[$2::VARCHAR, $3::VARCHAR, $4::VARCHAR, $5::VARCHAR, $6::VARCHAR]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != $7::VARCHAR
2025-03-05 23:51:27,427 - sqlalchemy.engine.Engine - INFO - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = $1::VARCHAR AND pg_catalog.pg_class.relkind = ANY (ARRAY[$2::VARCHAR, $3::VARCHAR, $4::VARCHAR, $5::VARCHAR, $6::VARCHAR]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != $7::VARCHAR
2025-03-05 23:51:27,428 INFO sqlalchemy.engine.Engine [cached since 0.8446s ago] ('users', 'r', 'p', 'f', 'v', 'm', 'pg_catalog')
2025-03-05 23:51:27,428 - sqlalchemy.engine.Engine - INFO - [cached since 0.8446s ago] ('users', 'r', 'p', 'f', 'v', 'm', 'pg_catalog')
2025-03-05 23:51:27,594 INFO sqlalchemy.engine.Engine SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = $1::VARCHAR AND pg_catalog.pg_class.relkind = ANY (ARRAY[$2::VARCHAR, $3::VARCHAR, $4::VARCHAR, $5::VARCHAR, $6::VARCHAR]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != $7::VARCHAR
2025-03-05 23:51:27,594 - sqlalchemy.engine.Engine - INFO - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = $1::VARCHAR AND pg_catalog.pg_class.relkind = ANY (ARRAY[$2::VARCHAR, $3::VARCHAR, $4::VARCHAR, $5::VARCHAR, $6::VARCHAR]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != $7::VARCHAR
2025-03-05 23:51:27,598 INFO sqlalchemy.engine.Engine [cached since 1.015s ago] ('organizations', 'r', 'p', 'f', 'v', 'm', 'pg_catalog')
2025-03-05 23:51:27,598 - sqlalchemy.engine.Engine - INFO - [cached since 1.015s ago] ('organizations', 'r', 'p', 'f', 'v', 'm', 'pg_catalog')
2025-03-05 23:51:27,767 INFO sqlalchemy.engine.Engine SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = $1::VARCHAR AND pg_catalog.pg_class.relkind = ANY (ARRAY[$2::VARCHAR, $3::VARCHAR, $4::VARCHAR, $5::VARCHAR, $6::VARCHAR]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != $7::VARCHAR
2025-03-05 23:51:27,767 - sqlalchemy.engine.Engine - INFO - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = $1::VARCHAR AND pg_catalog.pg_class.relkind = ANY (ARRAY[$2::VARCHAR, $3::VARCHAR, $4::VARCHAR, $5::VARCHAR, $6::VARCHAR]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != $7::VARCHAR
2025-03-05 23:51:27,767 INFO sqlalchemy.engine.Engine [cached since 1.184s ago] ('files', 'r', 'p', 'f', 'v', 'm', 'pg_catalog')
2025-03-05 23:51:27,767 - sqlalchemy.engine.Engine - INFO - [cached since 1.184s ago] ('files', 'r', 'p', 'f', 'v', 'm', 'pg_catalog')
2025-03-05 23:51:27,934 INFO sqlalchemy.engine.Engine SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = $1::VARCHAR AND pg_catalog.pg_class.relkind = ANY (ARRAY[$2::VARCHAR, $3::VARCHAR, $4::VARCHAR, $5::VARCHAR, $6::VARCHAR]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != $7::VARCHAR
2025-03-05 23:51:27,934 - sqlalchemy.engine.Engine - INFO - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = $1::VARCHAR AND pg_catalog.pg_class.relkind = ANY (ARRAY[$2::VARCHAR, $3::VARCHAR, $4::VARCHAR, $5::VARCHAR, $6::VARCHAR]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != $7::VARCHAR
2025-03-05 23:51:27,934 INFO sqlalchemy.engine.Engine [cached since 1.351s ago] ('knowledge_base', 'r', 'p', 'f', 'v', 'm', 'pg_catalog')
2025-03-05 23:51:27,934 - sqlalchemy.engine.Engine - INFO - [cached since 1.351s ago] ('knowledge_base', 'r', 'p', 'f', 'v', 'm', 'pg_catalog')
2025-03-05 23:51:28,101 INFO sqlalchemy.engine.Engine SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = $1::VARCHAR AND pg_catalog.pg_class.relkind = ANY (ARRAY[$2::VARCHAR, $3::VARCHAR, $4::VARCHAR, $5::VARCHAR, $6::VARCHAR]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != $7::VARCHAR
2025-03-05 23:51:28,101 - sqlalchemy.engine.Engine - INFO - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = $1::VARCHAR AND pg_catalog.pg_class.relkind = ANY (ARRAY[$2::VARCHAR, $3::VARCHAR, $4::VARCHAR, $5::VARCHAR, $6::VARCHAR]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != $7::VARCHAR
2025-03-05 23:51:28,101 INFO sqlalchemy.engine.Engine [cached since 1.518s ago] ('user_subscriptions', 'r', 'p', 'f', 'v', 'm', 'pg_catalog')
2025-03-05 23:51:28,101 - sqlalchemy.engine.Engine - INFO - [cached since 1.518s ago] ('user_subscriptions', 'r', 'p', 'f', 'v', 'm', 'pg_catalog')
2025-03-05 23:51:28,267 INFO sqlalchemy.engine.Engine SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = $1::VARCHAR AND pg_catalog.pg_class.relkind = ANY (ARRAY[$2::VARCHAR, $3::VARCHAR, $4::VARCHAR, $5::VARCHAR, $6::VARCHAR]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != $7::VARCHAR
2025-03-05 23:51:28,267 - sqlalchemy.engine.Engine - INFO - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = $1::VARCHAR AND pg_catalog.pg_class.relkind = ANY (ARRAY[$2::VARCHAR, $3::VARCHAR, $4::VARCHAR, $5::VARCHAR, $6::VARCHAR]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != $7::VARCHAR
2025-03-05 23:51:28,268 INFO sqlalchemy.engine.Engine [cached since 1.685s ago] ('payment_history', 'r', 'p', 'f', 'v', 'm', 'pg_catalog')
2025-03-05 23:51:28,268 - sqlalchemy.engine.Engine - INFO - [cached since 1.685s ago] ('payment_history', 'r', 'p', 'f', 'v', 'm', 'pg_catalog')
2025-03-05 23:51:28,434 INFO sqlalchemy.engine.Engine SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = $1::VARCHAR AND pg_catalog.pg_class.relkind = ANY (ARRAY[$2::VARCHAR, $3::VARCHAR, $4::VARCHAR, $5::VARCHAR, $6::VARCHAR]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != $7::VARCHAR
2025-03-05 23:51:28,434 - sqlalchemy.engine.Engine - INFO - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = $1::VARCHAR AND pg_catalog.pg_class.relkind = ANY (ARRAY[$2::VARCHAR, $3::VARCHAR, $4::VARCHAR, $5::VARCHAR, $6::VARCHAR]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != $7::VARCHAR
2025-03-05 23:51:28,434 INFO sqlalchemy.engine.Engine [cached since 1.851s ago] ('dashboard_stats', 'r', 'p', 'f', 'v', 'm', 'pg_catalog')
2025-03-05 23:51:28,434 - sqlalchemy.engine.Engine - INFO - [cached since 1.851s ago] ('dashboard_stats', 'r', 'p', 'f', 'v', 'm', 'pg_catalog')
2025-03-05 23:51:28,602 INFO sqlalchemy.engine.Engine SELECT pg_catalog.pg_type.typname 
FROM pg_catalog.pg_type JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_type.typnamespace 
WHERE pg_catalog.pg_type.typname = $1::VARCHAR AND pg_catalog.pg_type_is_visible(pg_catalog.pg_type.oid) AND pg_catalog.pg_namespace.nspname != $2::VARCHAR
2025-03-05 23:51:28,602 - sqlalchemy.engine.Engine - INFO - SELECT pg_catalog.pg_type.typname 
FROM pg_catalog.pg_type JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_type.typnamespace 
WHERE pg_catalog.pg_type.typname = $1::VARCHAR AND pg_catalog.pg_type_is_visible(pg_catalog.pg_type.oid) AND pg_catalog.pg_namespace.nspname != $2::VARCHAR
2025-03-05 23:51:28,603 INFO sqlalchemy.engine.Engine [generated in 0.00019s] ('discounttype', 'pg_catalog')
2025-03-05 23:51:28,603 - sqlalchemy.engine.Engine - INFO - [generated in 0.00019s] ('discounttype', 'pg_catalog')
2025-03-05 23:51:28,937 INFO sqlalchemy.engine.Engine SELECT pg_catalog.pg_type.typname 
FROM pg_catalog.pg_type JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_type.typnamespace 
WHERE pg_catalog.pg_type.typname = $1::VARCHAR AND pg_catalog.pg_type_is_visible(pg_catalog.pg_type.oid) AND pg_catalog.pg_namespace.nspname != $2::VARCHAR
2025-03-05 23:51:28,937 - sqlalchemy.engine.Engine - INFO - SELECT pg_catalog.pg_type.typname 
FROM pg_catalog.pg_type JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_type.typnamespace 
WHERE pg_catalog.pg_type.typname = $1::VARCHAR AND pg_catalog.pg_type_is_visible(pg_catalog.pg_type.oid) AND pg_catalog.pg_namespace.nspname != $2::VARCHAR
2025-03-05 23:51:28,937 INFO sqlalchemy.engine.Engine [cached since 0.3351s ago] ('userrole', 'pg_catalog')
2025-03-05 23:51:28,937 - sqlalchemy.engine.Engine - INFO - [cached since 0.3351s ago] ('userrole', 'pg_catalog')
2025-03-05 23:51:29,105 INFO sqlalchemy.engine.Engine SELECT pg_catalog.pg_type.typname 
FROM pg_catalog.pg_type JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_type.typnamespace 
WHERE pg_catalog.pg_type.typname = $1::VARCHAR AND pg_catalog.pg_type_is_visible(pg_catalog.pg_type.oid) AND pg_catalog.pg_namespace.nspname != $2::VARCHAR
2025-03-05 23:51:29,105 - sqlalchemy.engine.Engine - INFO - SELECT pg_catalog.pg_type.typname 
FROM pg_catalog.pg_type JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_type.typnamespace 
WHERE pg_catalog.pg_type.typname = $1::VARCHAR AND pg_catalog.pg_type_is_visible(pg_catalog.pg_type.oid) AND pg_catalog.pg_namespace.nspname != $2::VARCHAR
2025-03-05 23:51:29,105 INFO sqlalchemy.engine.Engine [cached since 0.5028s ago] ('filestatus', 'pg_catalog')
2025-03-05 23:51:29,105 - sqlalchemy.engine.Engine - INFO - [cached since 0.5028s ago] ('filestatus', 'pg_catalog')
2025-03-05 23:51:29,272 INFO sqlalchemy.engine.Engine SELECT pg_catalog.pg_type.typname 
FROM pg_catalog.pg_type JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_type.typnamespace 
WHERE pg_catalog.pg_type.typname = $1::VARCHAR AND pg_catalog.pg_type_is_visible(pg_catalog.pg_type.oid) AND pg_catalog.pg_namespace.nspname != $2::VARCHAR
2025-03-05 23:51:29,272 - sqlalchemy.engine.Engine - INFO - SELECT pg_catalog.pg_type.typname 
FROM pg_catalog.pg_type JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_type.typnamespace 
WHERE pg_catalog.pg_type.typname = $1::VARCHAR AND pg_catalog.pg_type_is_visible(pg_catalog.pg_type.oid) AND pg_catalog.pg_namespace.nspname != $2::VARCHAR
2025-03-05 23:51:29,273 INFO sqlalchemy.engine.Engine [cached since 0.6703s ago] ('subscriptionstatus', 'pg_catalog')
2025-03-05 23:51:29,273 - sqlalchemy.engine.Engine - INFO - [cached since 0.6703s ago] ('subscriptionstatus', 'pg_catalog')
2025-03-05 23:51:29,441 INFO sqlalchemy.engine.Engine SELECT pg_catalog.pg_type.typname 
FROM pg_catalog.pg_type JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_type.typnamespace 
WHERE pg_catalog.pg_type.typname = $1::VARCHAR AND pg_catalog.pg_type_is_visible(pg_catalog.pg_type.oid) AND pg_catalog.pg_namespace.nspname != $2::VARCHAR
2025-03-05 23:51:29,441 - sqlalchemy.engine.Engine - INFO - SELECT pg_catalog.pg_type.typname 
FROM pg_catalog.pg_type JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_type.typnamespace 
WHERE pg_catalog.pg_type.typname = $1::VARCHAR AND pg_catalog.pg_type_is_visible(pg_catalog.pg_type.oid) AND pg_catalog.pg_namespace.nspname != $2::VARCHAR
2025-03-05 23:51:29,441 INFO sqlalchemy.engine.Engine [cached since 0.8384s ago] ('paymentstatus', 'pg_catalog')
2025-03-05 23:51:29,441 - sqlalchemy.engine.Engine - INFO - [cached since 0.8384s ago] ('paymentstatus', 'pg_catalog')
2025-03-05 23:51:29,608 - app.database.database_factory - INFO - Successfully created database tables
2025-03-05 23:51:29,608 - app.database.database_factory - INFO - Created tables: promo_codes, promo_code_usage, user_organizations, users, organizations, files, knowledge_base, user_subscriptions, payment_history, dashboard_stats
2025-03-05 23:51:29,608 - app.database.database_factory - INFO - Processing SQL file: /home/runner/workspace/app/database/sql/update_dashboard_stats.sql
2025-03-05 23:51:31,321 INFO sqlalchemy.engine.Engine BEGIN (implicit)
2025-03-05 23:51:31,321 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-03-05 23:51:31,321 INFO sqlalchemy.engine.Engine CREATE INDEX IF NOT EXISTS idx_files_user_id ON files(user_id);
2025-03-05 23:51:31,321 - sqlalchemy.engine.Engine - INFO - CREATE INDEX IF NOT EXISTS idx_files_user_id ON files(user_id);
2025-03-05 23:51:31,321 INFO sqlalchemy.engine.Engine [generated in 0.00011s] ()
2025-03-05 23:51:31,321 - sqlalchemy.engine.Engine - INFO - [generated in 0.00011s] ()
2025-03-05 23:51:31,994 INFO sqlalchemy.engine.Engine COMMIT
2025-03-05 23:51:31,994 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-03-05 23:51:32,162 INFO sqlalchemy.engine.Engine BEGIN (implicit)
2025-03-05 23:51:32,162 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-03-05 23:51:32,162 INFO sqlalchemy.engine.Engine CREATE INDEX IF NOT EXISTS idx_files_organization_id ON files(organization_id);
2025-03-05 23:51:32,162 - sqlalchemy.engine.Engine - INFO - CREATE INDEX IF NOT EXISTS idx_files_organization_id ON files(organization_id);
2025-03-05 23:51:32,162 INFO sqlalchemy.engine.Engine [generated in 0.00013s] ()
2025-03-05 23:51:32,162 - sqlalchemy.engine.Engine - INFO - [generated in 0.00013s] ()
2025-03-05 23:51:32,666 INFO sqlalchemy.engine.Engine COMMIT
2025-03-05 23:51:32,666 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-03-05 23:51:32,834 INFO sqlalchemy.engine.Engine BEGIN (implicit)
2025-03-05 23:51:32,834 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-03-05 23:51:32,835 INFO sqlalchemy.engine.Engine CREATE INDEX IF NOT EXISTS idx_knowledge_base_file_id ON knowledge_base(file_id);
2025-03-05 23:51:32,835 - sqlalchemy.engine.Engine - INFO - CREATE INDEX IF NOT EXISTS idx_knowledge_base_file_id ON knowledge_base(file_id);
2025-03-05 23:51:32,835 INFO sqlalchemy.engine.Engine [generated in 0.00011s] ()
2025-03-05 23:51:32,835 - sqlalchemy.engine.Engine - INFO - [generated in 0.00011s] ()
2025-03-05 23:51:33,338 INFO sqlalchemy.engine.Engine COMMIT
2025-03-05 23:51:33,338 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-03-05 23:51:33,506 INFO sqlalchemy.engine.Engine BEGIN (implicit)
2025-03-05 23:51:33,506 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-03-05 23:51:33,507 INFO sqlalchemy.engine.Engine CREATE INDEX IF NOT EXISTS idx_user_organizations_user_id ON user_organizations(user_id);
2025-03-05 23:51:33,507 - sqlalchemy.engine.Engine - INFO - CREATE INDEX IF NOT EXISTS idx_user_organizations_user_id ON user_organizations(user_id);
2025-03-05 23:51:33,507 INFO sqlalchemy.engine.Engine [generated in 0.00016s] ()
2025-03-05 23:51:33,507 - sqlalchemy.engine.Engine - INFO - [generated in 0.00016s] ()
2025-03-05 23:51:34,011 INFO sqlalchemy.engine.Engine COMMIT
2025-03-05 23:51:34,011 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-03-05 23:51:34,179 INFO sqlalchemy.engine.Engine BEGIN (implicit)
2025-03-05 23:51:34,179 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-03-05 23:51:34,179 INFO sqlalchemy.engine.Engine CREATE INDEX IF NOT EXISTS idx_user_organizations_organization_id ON user_organizations(organization_id);
2025-03-05 23:51:34,179 - sqlalchemy.engine.Engine - INFO - CREATE INDEX IF NOT EXISTS idx_user_organizations_organization_id ON user_organizations(organization_id);
2025-03-05 23:51:34,179 INFO sqlalchemy.engine.Engine [generated in 0.00010s] ()
2025-03-05 23:51:34,179 - sqlalchemy.engine.Engine - INFO - [generated in 0.00010s] ()
2025-03-05 23:51:34,683 INFO sqlalchemy.engine.Engine COMMIT
2025-03-05 23:51:34,683 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-03-05 23:51:34,851 INFO sqlalchemy.engine.Engine BEGIN (implicit)
2025-03-05 23:51:34,851 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-03-05 23:51:34,852 INFO sqlalchemy.engine.Engine DROP MATERIALIZED VIEW IF EXISTS mv_user_stats;
2025-03-05 23:51:34,852 - sqlalchemy.engine.Engine - INFO - DROP MATERIALIZED VIEW IF EXISTS mv_user_stats;
2025-03-05 23:51:34,852 INFO sqlalchemy.engine.Engine [generated in 0.00015s] ()
2025-03-05 23:51:34,852 - sqlalchemy.engine.Engine - INFO - [generated in 0.00015s] ()
2025-03-05 23:51:35,359 INFO sqlalchemy.engine.Engine COMMIT
2025-03-05 23:51:35,359 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-03-05 23:51:35,531 INFO sqlalchemy.engine.Engine BEGIN (implicit)
2025-03-05 23:51:35,531 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-03-05 23:51:35,531 INFO sqlalchemy.engine.Engine DROP MATERIALIZED VIEW IF EXISTS mv_organization_stats;
2025-03-05 23:51:35,531 - sqlalchemy.engine.Engine - INFO - DROP MATERIALIZED VIEW IF EXISTS mv_organization_stats;
2025-03-05 23:51:35,531 INFO sqlalchemy.engine.Engine [generated in 0.00012s] ()
2025-03-05 23:51:35,531 - sqlalchemy.engine.Engine - INFO - [generated in 0.00012s] ()
2025-03-05 23:51:36,037 INFO sqlalchemy.engine.Engine COMMIT
2025-03-05 23:51:36,037 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-03-05 23:51:36,206 INFO sqlalchemy.engine.Engine BEGIN (implicit)
2025-03-05 23:51:36,206 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-03-05 23:51:36,207 INFO sqlalchemy.engine.Engine DROP FUNCTION IF EXISTS refresh_dashboard_stats_views;
2025-03-05 23:51:36,207 - sqlalchemy.engine.Engine - INFO - DROP FUNCTION IF EXISTS refresh_dashboard_stats_views;
2025-03-05 23:51:36,207 INFO sqlalchemy.engine.Engine [generated in 0.00021s] ()
2025-03-05 23:51:36,207 - sqlalchemy.engine.Engine - INFO - [generated in 0.00021s] ()
2025-03-05 23:51:36,711 INFO sqlalchemy.engine.Engine COMMIT
2025-03-05 23:51:36,711 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-03-05 23:51:36,881 INFO sqlalchemy.engine.Engine BEGIN (implicit)
2025-03-05 23:51:36,881 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-03-05 23:51:36,882 INFO sqlalchemy.engine.Engine DROP FUNCTION IF EXISTS update_dashboard_stats;
2025-03-05 23:51:36,882 - sqlalchemy.engine.Engine - INFO - DROP FUNCTION IF EXISTS update_dashboard_stats;
2025-03-05 23:51:36,882 INFO sqlalchemy.engine.Engine [generated in 0.00013s] ()
2025-03-05 23:51:36,882 - sqlalchemy.engine.Engine - INFO - [generated in 0.00013s] ()
2025-03-05 23:51:37,386 INFO sqlalchemy.engine.Engine COMMIT
2025-03-05 23:51:37,386 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-03-05 23:51:37,555 INFO sqlalchemy.engine.Engine BEGIN (implicit)
2025-03-05 23:51:37,555 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-03-05 23:51:37,556 INFO sqlalchemy.engine.Engine DROP FUNCTION IF EXISTS manage_dashboard_stats_cron_jobs;
2025-03-05 23:51:37,556 - sqlalchemy.engine.Engine - INFO - DROP FUNCTION IF EXISTS manage_dashboard_stats_cron_jobs;
2025-03-05 23:51:37,556 INFO sqlalchemy.engine.Engine [generated in 0.00012s] ()
2025-03-05 23:51:37,556 - sqlalchemy.engine.Engine - INFO - [generated in 0.00012s] ()
2025-03-05 23:51:38,060 INFO sqlalchemy.engine.Engine COMMIT
2025-03-05 23:51:38,060 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-03-05 23:51:38,232 INFO sqlalchemy.engine.Engine BEGIN (implicit)
2025-03-05 23:51:38,232 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-03-05 23:51:38,232 INFO sqlalchemy.engine.Engine DROP FUNCTION IF EXISTS update_user_stats;
2025-03-05 23:51:38,232 - sqlalchemy.engine.Engine - INFO - DROP FUNCTION IF EXISTS update_user_stats;
2025-03-05 23:51:38,233 INFO sqlalchemy.engine.Engine [generated in 0.00015s] ()
2025-03-05 23:51:38,233 - sqlalchemy.engine.Engine - INFO - [generated in 0.00015s] ()
2025-03-05 23:51:38,737 INFO sqlalchemy.engine.Engine COMMIT
2025-03-05 23:51:38,737 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-03-05 23:51:38,906 INFO sqlalchemy.engine.Engine BEGIN (implicit)
2025-03-05 23:51:38,906 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-03-05 23:51:38,907 INFO sqlalchemy.engine.Engine DROP FUNCTION IF EXISTS update_organization_stats;
2025-03-05 23:51:38,907 - sqlalchemy.engine.Engine - INFO - DROP FUNCTION IF EXISTS update_organization_stats;
2025-03-05 23:51:38,908 INFO sqlalchemy.engine.Engine [generated in 0.00092s] ()
2025-03-05 23:51:38,908 - sqlalchemy.engine.Engine - INFO - [generated in 0.00092s] ()
2025-03-05 23:51:39,412 INFO sqlalchemy.engine.Engine COMMIT
2025-03-05 23:51:39,412 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-03-05 23:51:39,581 INFO sqlalchemy.engine.Engine BEGIN (implicit)
2025-03-05 23:51:39,581 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-03-05 23:51:39,582 INFO sqlalchemy.engine.Engine CREATE MATERIALIZED VIEW mv_user_stats AS
SELECT 
    u.id as user_id,
    COUNT(DISTINCT kb.id) as total_knowledge_base_count,
    COUNT(DISTINCT f.id) as total_file_count,
    COALESCE(SUM(f.file_size), 0) as total_storage_used,
    MAX(GREATEST(COALESCE(kb.updated_at, '1970-01-01'), COALESCE(f.updated_at, '1970-01-01'))) as last_activity_date
FROM users u
LEFT JOIN files f ON f.user_id = u.id
LEFT JOIN knowledge_base kb ON kb.file_id = f.id
GROUP BY u.id
WITH DATA;
2025-03-05 23:51:39,582 - sqlalchemy.engine.Engine - INFO - CREATE MATERIALIZED VIEW mv_user_stats AS
SELECT 
    u.id as user_id,
    COUNT(DISTINCT kb.id) as total_knowledge_base_count,
    COUNT(DISTINCT f.id) as total_file_count,
    COALESCE(SUM(f.file_size), 0) as total_storage_used,
    MAX(GREATEST(COALESCE(kb.updated_at, '1970-01-01'), COALESCE(f.updated_at, '1970-01-01'))) as last_activity_date
FROM users u
LEFT JOIN files f ON f.user_id = u.id
LEFT JOIN knowledge_base kb ON kb.file_id = f.id
GROUP BY u.id
WITH DATA;
2025-03-05 23:51:39,582 INFO sqlalchemy.engine.Engine [generated in 0.00018s] ()
2025-03-05 23:51:39,582 - sqlalchemy.engine.Engine - INFO - [generated in 0.00018s] ()
2025-03-05 23:51:40,100 INFO sqlalchemy.engine.Engine COMMIT
2025-03-05 23:51:40,100 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-03-05 23:51:40,270 INFO sqlalchemy.engine.Engine BEGIN (implicit)
2025-03-05 23:51:40,270 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-03-05 23:51:40,270 INFO sqlalchemy.engine.Engine CREATE UNIQUE INDEX idx_mv_user_stats_user_id ON mv_user_stats(user_id);
2025-03-05 23:51:40,270 - sqlalchemy.engine.Engine - INFO - CREATE UNIQUE INDEX idx_mv_user_stats_user_id ON mv_user_stats(user_id);
2025-03-05 23:51:40,270 INFO sqlalchemy.engine.Engine [generated in 0.00017s] ()
2025-03-05 23:51:40,270 - sqlalchemy.engine.Engine - INFO - [generated in 0.00017s] ()
2025-03-05 23:51:40,779 INFO sqlalchemy.engine.Engine COMMIT
2025-03-05 23:51:40,779 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-03-05 23:51:40,949 INFO sqlalchemy.engine.Engine BEGIN (implicit)
2025-03-05 23:51:40,949 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-03-05 23:51:40,949 INFO sqlalchemy.engine.Engine CREATE MATERIALIZED VIEW mv_organization_stats AS
SELECT 
    o.id as organization_id,
    COUNT(DISTINCT kb.id) as total_knowledge_base_count,
    COUNT(DISTINCT f.id) as total_file_count,
    COALESCE(SUM(f.file_size), 0) as total_storage_used,
    MAX(GREATEST(COALESCE(kb.updated_at, '1970-01-01'), COALESCE(f.updated_at, '1970-01-01'))) as last_activity_date
FROM organizations o
LEFT JOIN files f ON f.organization_id = o.id
LEFT JOIN knowledge_base kb ON kb.file_id = f.id
GROUP BY o.id
WITH DATA;
2025-03-05 23:51:40,949 - sqlalchemy.engine.Engine - INFO - CREATE MATERIALIZED VIEW mv_organization_stats AS
SELECT 
    o.id as organization_id,
    COUNT(DISTINCT kb.id) as total_knowledge_base_count,
    COUNT(DISTINCT f.id) as total_file_count,
    COALESCE(SUM(f.file_size), 0) as total_storage_used,
    MAX(GREATEST(COALESCE(kb.updated_at, '1970-01-01'), COALESCE(f.updated_at, '1970-01-01'))) as last_activity_date
FROM organizations o
LEFT JOIN files f ON f.organization_id = o.id
LEFT JOIN knowledge_base kb ON kb.file_id = f.id
GROUP BY o.id
WITH DATA;
2025-03-05 23:51:40,949 INFO sqlalchemy.engine.Engine [generated in 0.00013s] ()
2025-03-05 23:51:40,949 - sqlalchemy.engine.Engine - INFO - [generated in 0.00013s] ()
2025-03-05 23:51:41,461 INFO sqlalchemy.engine.Engine COMMIT
2025-03-05 23:51:41,461 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-03-05 23:51:41,630 INFO sqlalchemy.engine.Engine BEGIN (implicit)
2025-03-05 23:51:41,630 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-03-05 23:51:41,631 INFO sqlalchemy.engine.Engine CREATE UNIQUE INDEX idx_mv_organization_stats_organization_id ON mv_organization_stats(organization_id);
2025-03-05 23:51:41,631 - sqlalchemy.engine.Engine - INFO - CREATE UNIQUE INDEX idx_mv_organization_stats_organization_id ON mv_organization_stats(organization_id);
2025-03-05 23:51:41,632 INFO sqlalchemy.engine.Engine [generated in 0.00041s] ()
2025-03-05 23:51:41,632 - sqlalchemy.engine.Engine - INFO - [generated in 0.00041s] ()
2025-03-05 23:51:42,142 INFO sqlalchemy.engine.Engine COMMIT
2025-03-05 23:51:42,142 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-03-05 23:51:42,312 INFO sqlalchemy.engine.Engine BEGIN (implicit)
2025-03-05 23:51:42,312 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-03-05 23:51:42,313 INFO sqlalchemy.engine.Engine DO $$ 
BEGIN
    EXECUTE 'CREATE OR REPLACE FUNCTION refresh_dashboard_stats_views()
    RETURNS void AS $func$
    BEGIN
        REFRESH MATERIALIZED VIEW mv_user_stats;
2025-03-05 23:51:42,313 - sqlalchemy.engine.Engine - INFO - DO $$ 
BEGIN
    EXECUTE 'CREATE OR REPLACE FUNCTION refresh_dashboard_stats_views()
    RETURNS void AS $func$
    BEGIN
        REFRESH MATERIALIZED VIEW mv_user_stats;
2025-03-05 23:51:42,313 INFO sqlalchemy.engine.Engine [generated in 0.00019s] ()
2025-03-05 23:51:42,313 - sqlalchemy.engine.Engine - INFO - [generated in 0.00019s] ()
2025-03-05 23:51:42,817 INFO sqlalchemy.engine.Engine ROLLBACK
2025-03-05 23:51:42,817 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-03-05 23:51:42,985 - app.database.database_factory - ERROR - Error executing SQL statement: (sqlalchemy.dialects.postgresql.asyncpg.ProgrammingError) <class 'asyncpg.exceptions.PostgresSyntaxError'>: unterminated dollar-quoted string at or near "$$ 
BEGIN
    EXECUTE 'CREATE OR REPLACE FUNCTION refresh_dashboard_stats_views()
    RETURNS void AS $func$
    BEGIN
        REFRESH MATERIALIZED VIEW mv_user_stats;"
[SQL: DO $$ 
BEGIN
    EXECUTE 'CREATE OR REPLACE FUNCTION refresh_dashboard_stats_views()
    RETURNS void AS $func$
    BEGIN
        REFRESH MATERIALIZED VIEW mv_user_stats;]
(Background on this error at: https://sqlalche.me/e/20/f405)
2025-03-05 23:51:42,985 - app.database.database_factory - DEBUG - Failed SQL: DO $$ 
BEGIN
    EXECUTE 'CREATE OR REPLACE FUNCTION refresh_dashboard_stats_views()
    RETURNS void AS $func$
    BEGIN
        REFRESH MATERIALIZED VIEW mv_user_stats;
2025-03-05 23:51:42,985 - app.database.database_factory - WARNING - Error executing statement, continuing with next: (sqlalchemy.dialects.postgresql.asyncpg.ProgrammingError) <class 'asyncpg.exceptions.PostgresSyntaxError'>: unterminated dollar-quoted string at or near "$$ 
BEGIN
    EXECUTE 'CREATE OR REPLACE FUNCTION refresh_dashboard_stats_views()
    RETURNS void AS $func$
    BEGIN
        REFRESH MATERIALIZED VIEW mv_user_stats;"
[SQL: DO $$ 
BEGIN
    EXECUTE 'CREATE OR REPLACE FUNCTION refresh_dashboard_stats_views()
    RETURNS void AS $func$
    BEGIN
        REFRESH MATERIALIZED VIEW mv_user_stats;]
(Background on this error at: https://sqlalche.me/e/20/f405)
2025-03-05 23:51:42,985 INFO sqlalchemy.engine.Engine BEGIN (implicit)
2025-03-05 23:51:42,985 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-03-05 23:51:42,986 INFO sqlalchemy.engine.Engine         REFRESH MATERIALIZED VIEW mv_organization_stats;
2025-03-05 23:51:42,986 - sqlalchemy.engine.Engine - INFO -         REFRESH MATERIALIZED VIEW mv_organization_stats;
2025-03-05 23:51:42,986 INFO sqlalchemy.engine.Engine [generated in 0.00015s] ()
2025-03-05 23:51:42,986 - sqlalchemy.engine.Engine - INFO - [generated in 0.00015s] ()
2025-03-05 23:51:43,496 INFO sqlalchemy.engine.Engine COMMIT
2025-03-05 23:51:43,496 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-03-05 23:51:43,667 INFO sqlalchemy.engine.Engine BEGIN (implicit)
2025-03-05 23:51:43,667 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-03-05 23:51:43,667 INFO sqlalchemy.engine.Engine     END;
2025-03-05 23:51:43,667 - sqlalchemy.engine.Engine - INFO -     END;
2025-03-05 23:51:43,667 INFO sqlalchemy.engine.Engine [generated in 0.00010s] ()
2025-03-05 23:51:43,667 - sqlalchemy.engine.Engine - INFO - [generated in 0.00010s] ()
2025-03-05 23:51:44,171 INFO sqlalchemy.engine.Engine COMMIT
2025-03-05 23:51:44,171 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-03-05 23:51:44,340 INFO sqlalchemy.engine.Engine BEGIN (implicit)
2025-03-05 23:51:44,340 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-03-05 23:51:44,340 INFO sqlalchemy.engine.Engine     $func$ LANGUAGE plpgsql';
2025-03-05 23:51:44,340 - sqlalchemy.engine.Engine - INFO -     $func$ LANGUAGE plpgsql';
2025-03-05 23:51:44,340 INFO sqlalchemy.engine.Engine [generated in 0.00012s] ()
2025-03-05 23:51:44,340 - sqlalchemy.engine.Engine - INFO - [generated in 0.00012s] ()
2025-03-05 23:51:44,844 INFO sqlalchemy.engine.Engine ROLLBACK
2025-03-05 23:51:44,844 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-03-05 23:51:45,012 - app.database.database_factory - ERROR - Error executing SQL statement: (sqlalchemy.dialects.postgresql.asyncpg.ProgrammingError) <class 'asyncpg.exceptions.PostgresSyntaxError'>: unterminated dollar-quoted string at or near "$func$ LANGUAGE plpgsql';"
[SQL:     $func$ LANGUAGE plpgsql';]
(Background on this error at: https://sqlalche.me/e/20/f405)
2025-03-05 23:51:45,012 - app.database.database_factory - DEBUG - Failed SQL:     $func$ LANGUAGE plpgsql';
2025-03-05 23:51:45,012 - app.database.database_factory - WARNING - Error executing statement, continuing with next: (sqlalchemy.dialects.postgresql.asyncpg.ProgrammingError) <class 'asyncpg.exceptions.PostgresSyntaxError'>: unterminated dollar-quoted string at or near "$func$ LANGUAGE plpgsql';"
[SQL:     $func$ LANGUAGE plpgsql';]
(Background on this error at: https://sqlalche.me/e/20/f405)
2025-03-05 23:51:45,013 INFO sqlalchemy.engine.Engine BEGIN (implicit)
2025-03-05 23:51:45,013 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-03-05 23:51:45,013 INFO sqlalchemy.engine.Engine END $$;
2025-03-05 23:51:45,013 - sqlalchemy.engine.Engine - INFO - END $$;
2025-03-05 23:51:45,013 INFO sqlalchemy.engine.Engine [generated in 0.00018s] ()
2025-03-05 23:51:45,013 - sqlalchemy.engine.Engine - INFO - [generated in 0.00018s] ()
2025-03-05 23:51:45,517 INFO sqlalchemy.engine.Engine ROLLBACK
2025-03-05 23:51:45,517 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-03-05 23:51:45,685 - app.database.database_factory - ERROR - Error executing SQL statement: (sqlalchemy.dialects.postgresql.asyncpg.ProgrammingError) <class 'asyncpg.exceptions.PostgresSyntaxError'>: unterminated dollar-quoted string at or near "$$;"
[SQL: END $$;]
(Background on this error at: https://sqlalche.me/e/20/f405)
2025-03-05 23:51:45,686 - app.database.database_factory - DEBUG - Failed SQL: END $$;
2025-03-05 23:51:45,687 - app.database.database_factory - WARNING - Error executing statement, continuing with next: (sqlalchemy.dialects.postgresql.asyncpg.ProgrammingError) <class 'asyncpg.exceptions.PostgresSyntaxError'>: unterminated dollar-quoted string at or near "$$;"
[SQL: END $$;]
(Background on this error at: https://sqlalche.me/e/20/f405)
2025-03-05 23:51:45,688 INFO sqlalchemy.engine.Engine BEGIN (implicit)
2025-03-05 23:51:45,688 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-03-05 23:51:45,689 INFO sqlalchemy.engine.Engine DO $$
BEGIN
    EXECUTE 'CREATE OR REPLACE FUNCTION update_dashboard_stats(batch_size integer DEFAULT 1000)
    RETURNS void AS $func$
    DECLARE
        user_cursor CURSOR FOR 
            SELECT user_id, total_knowledge_base_count, total_file_count, 
                   total_storage_used, last_activity_date 
            FROM mv_user_stats;
2025-03-05 23:51:45,689 - sqlalchemy.engine.Engine - INFO - DO $$
BEGIN
    EXECUTE 'CREATE OR REPLACE FUNCTION update_dashboard_stats(batch_size integer DEFAULT 1000)
    RETURNS void AS $func$
    DECLARE
        user_cursor CURSOR FOR 
            SELECT user_id, total_knowledge_base_count, total_file_count, 
                   total_storage_used, last_activity_date 
            FROM mv_user_stats;
2025-03-05 23:51:45,690 INFO sqlalchemy.engine.Engine [generated in 0.00035s] ()
2025-03-05 23:51:45,690 - sqlalchemy.engine.Engine - INFO - [generated in 0.00035s] ()
2025-03-05 23:51:46,194 INFO sqlalchemy.engine.Engine ROLLBACK
2025-03-05 23:51:46,194 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-03-05 23:51:46,365 - app.database.database_factory - ERROR - Error executing SQL statement: (sqlalchemy.dialects.postgresql.asyncpg.ProgrammingError) <class 'asyncpg.exceptions.PostgresSyntaxError'>: unterminated dollar-quoted string at or near "$$
BEGIN
    EXECUTE 'CREATE OR REPLACE FUNCTION update_dashboard_stats(batch_size integer DEFAULT 1000)
    RETURNS void AS $func$
    DECLARE
        user_cursor CURSOR FOR 
            SELECT user_id, total_knowledge_base_count, total_file_count, 
                   total_storage_used, last_activity_date 
            FROM mv_user_stats;"
[SQL: DO $$
BEGIN
    EXECUTE 'CREATE OR REPLACE FUNCTION update_dashboard_stats(batch_size integer DEFAULT 1000)
    RETURNS void AS $func$
    DECLARE
        user_cursor CURSOR FOR 
            SELECT user_id, total_knowledge_base_count, total_file_count, 
                   total_storage_used, last_activity_date 
            FROM mv_user_stats;]
(Background on this error at: https://sqlalche.me/e/20/f405)
2025-03-05 23:51:46,365 - app.database.database_factory - DEBUG - Failed SQL: DO $$
BEGIN
    EXECUTE 'CREATE OR REPLACE FUNCTION update_dashboard_stats(batch_size integer DEFAULT 1000)
    RETURNS void AS $func$
    DECLARE
        user_cursor CURSOR FOR 
            SELECT user_id, total_knowledge_base_count, total_file_count, 
                   total_storage_used, last_activity_date 
            FROM mv_user_stats;
2025-03-05 23:51:46,365 - app.database.database_factory - WARNING - Error executing statement, continuing with next: (sqlalchemy.dialects.postgresql.asyncpg.ProgrammingError) <class 'asyncpg.exceptions.PostgresSyntaxError'>: unterminated dollar-quoted string at or near "$$
BEGIN
    EXECUTE 'CREATE OR REPLACE FUNCTION update_dashboard_stats(batch_size integer DEFAULT 1000)
    RETURNS void AS $func$
    DECLARE
        user_cursor CURSOR FOR 
            SELECT user_id, total_knowledge_base_count, total_file_count, 
                   total_storage_used, last_activity_date 
            FROM mv_user_stats;"
[SQL: DO $$
BEGIN
    EXECUTE 'CREATE OR REPLACE FUNCTION update_dashboard_stats(batch_size integer DEFAULT 1000)
    RETURNS void AS $func$
    DECLARE
        user_cursor CURSOR FOR 
            SELECT user_id, total_knowledge_base_count, total_file_count, 
                   total_storage_used, last_activity_date 
            FROM mv_user_stats;]
(Background on this error at: https://sqlalche.me/e/20/f405)
2025-03-05 23:51:46,365 INFO sqlalchemy.engine.Engine BEGIN (implicit)
2025-03-05 23:51:46,365 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-03-05 23:51:46,365 INFO sqlalchemy.engine.Engine         org_cursor CURSOR FOR 
            SELECT organization_id, total_knowledge_base_count, total_file_count, 
                   total_storage_used, last_activity_date 
            FROM mv_organization_stats;
2025-03-05 23:51:46,365 - sqlalchemy.engine.Engine - INFO -         org_cursor CURSOR FOR 
            SELECT organization_id, total_knowledge_base_count, total_file_count, 
                   total_storage_used, last_activity_date 
            FROM mv_organization_stats;
2025-03-05 23:51:46,366 INFO sqlalchemy.engine.Engine [generated in 0.00018s] ()
2025-03-05 23:51:46,366 - sqlalchemy.engine.Engine - INFO - [generated in 0.00018s] ()
2025-03-05 23:51:46,873 INFO sqlalchemy.engine.Engine ROLLBACK
2025-03-05 23:51:46,873 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-03-05 23:51:47,041 - app.database.database_factory - ERROR - Error executing SQL statement: (sqlalchemy.dialects.postgresql.asyncpg.ProgrammingError) <class 'asyncpg.exceptions.PostgresSyntaxError'>: syntax error at or near "org_cursor"
[SQL:         org_cursor CURSOR FOR 
            SELECT organization_id, total_knowledge_base_count, total_file_count, 
                   total_storage_used, last_activity_date 
            FROM mv_organization_stats;]
(Background on this error at: https://sqlalche.me/e/20/f405)
2025-03-05 23:51:47,041 - app.database.database_factory - DEBUG - Failed SQL:         org_cursor CURSOR FOR 
            SELECT organization_id, total_knowledge_base_count, total_file_count, 
                   total_storage_used, last_activity_date 
            FROM mv_organization_stats;
2025-03-05 23:51:47,041 - app.database.database_factory - WARNING - Error executing statement, continuing with next: (sqlalchemy.dialects.postgresql.asyncpg.ProgrammingError) <class 'asyncpg.exceptions.PostgresSyntaxError'>: syntax error at or near "org_cursor"
[SQL:         org_cursor CURSOR FOR 
            SELECT organization_id, total_knowledge_base_count, total_file_count, 
                   total_storage_used, last_activity_date 
            FROM mv_organization_stats;]
(Background on this error at: https://sqlalche.me/e/20/f405)
2025-03-05 23:51:47,041 INFO sqlalchemy.engine.Engine BEGIN (implicit)
2025-03-05 23:51:47,041 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-03-05 23:51:47,041 INFO sqlalchemy.engine.Engine         batch_counter integer := 0;
2025-03-05 23:51:47,041 - sqlalchemy.engine.Engine - INFO -         batch_counter integer := 0;
2025-03-05 23:51:47,041 INFO sqlalchemy.engine.Engine [generated in 0.00013s] ()
2025-03-05 23:51:47,041 - sqlalchemy.engine.Engine - INFO - [generated in 0.00013s] ()
2025-03-05 23:51:47,545 INFO sqlalchemy.engine.Engine ROLLBACK
2025-03-05 23:51:47,545 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-03-05 23:51:47,713 - app.database.database_factory - ERROR - Error executing SQL statement: (sqlalchemy.dialects.postgresql.asyncpg.ProgrammingError) <class 'asyncpg.exceptions.PostgresSyntaxError'>: syntax error at or near "batch_counter"
[SQL:         batch_counter integer := 0;]
(Background on this error at: https://sqlalche.me/e/20/f405)
2025-03-05 23:51:47,713 - app.database.database_factory - DEBUG - Failed SQL:         batch_counter integer := 0;
2025-03-05 23:51:47,713 - app.database.database_factory - WARNING - Error executing statement, continuing with next: (sqlalchemy.dialects.postgresql.asyncpg.ProgrammingError) <class 'asyncpg.exceptions.PostgresSyntaxError'>: syntax error at or near "batch_counter"
[SQL:         batch_counter integer := 0;]
(Background on this error at: https://sqlalche.me/e/20/f405)
2025-03-05 23:51:47,713 INFO sqlalchemy.engine.Engine BEGIN (implicit)
2025-03-05 23:51:47,713 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-03-05 23:51:47,713 INFO sqlalchemy.engine.Engine     BEGIN
        FOR user_stat IN user_cursor LOOP
            INSERT INTO dashboard_stats (
                user_id,
                total_knowledge_base_count,
                total_file_count,
                total_storage_used,
                last_activity_date
            ) VALUES (
                user_stat.user_id,
                user_stat.total_knowledge_base_count,
                user_stat.total_file_count,
                user_stat.total_storage_used,
                user_stat.last_activity_date
            )
            ON CONFLICT (user_id) WHERE user_id IS NOT NULL
            DO UPDATE SET
                total_knowledge_base_count = EXCLUDED.total_knowledge_base_count,
                total_file_count = EXCLUDED.total_file_count,
                total_storage_used = EXCLUDED.total_storage_used,
                last_activity_date = EXCLUDED.last_activity_date,
                last_updated = CURRENT_TIMESTAMP;
2025-03-05 23:51:47,713 - sqlalchemy.engine.Engine - INFO -     BEGIN
        FOR user_stat IN user_cursor LOOP
            INSERT INTO dashboard_stats (
                user_id,
                total_knowledge_base_count,
                total_file_count,
                total_storage_used,
                last_activity_date
            ) VALUES (
                user_stat.user_id,
                user_stat.total_knowledge_base_count,
                user_stat.total_file_count,
                user_stat.total_storage_used,
                user_stat.last_activity_date
            )
            ON CONFLICT (user_id) WHERE user_id IS NOT NULL
            DO UPDATE SET
                total_knowledge_base_count = EXCLUDED.total_knowledge_base_count,
                total_file_count = EXCLUDED.total_file_count,
                total_storage_used = EXCLUDED.total_storage_used,
                last_activity_date = EXCLUDED.last_activity_date,
                last_updated = CURRENT_TIMESTAMP;
2025-03-05 23:51:47,714 INFO sqlalchemy.engine.Engine [generated in 0.00018s] ()
2025-03-05 23:51:47,714 - sqlalchemy.engine.Engine - INFO - [generated in 0.00018s] ()
2025-03-05 23:51:48,217 INFO sqlalchemy.engine.Engine ROLLBACK
2025-03-05 23:51:48,217 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-03-05 23:51:48,385 - app.database.database_factory - ERROR - Error executing SQL statement: (sqlalchemy.dialects.postgresql.asyncpg.ProgrammingError) <class 'asyncpg.exceptions.PostgresSyntaxError'>: syntax error at or near "FOR"
[SQL:     BEGIN
        FOR user_stat IN user_cursor LOOP
            INSERT INTO dashboard_stats (
                user_id,
                total_knowledge_base_count,
                total_file_count,
                total_storage_used,
                last_activity_date
            ) VALUES (
                user_stat.user_id,
                user_stat.total_knowledge_base_count,
                user_stat.total_file_count,
                user_stat.total_storage_used,
                user_stat.last_activity_date
            )
            ON CONFLICT (user_id) WHERE user_id IS NOT NULL
            DO UPDATE SET
                total_knowledge_base_count = EXCLUDED.total_knowledge_base_count,
                total_file_count = EXCLUDED.total_file_count,
                total_storage_used = EXCLUDED.total_storage_used,
                last_activity_date = EXCLUDED.last_activity_date,
                last_updated = CURRENT_TIMESTAMP;]
(Background on this error at: https://sqlalche.me/e/20/f405)
2025-03-05 23:51:48,385 - app.database.database_factory - DEBUG - Failed SQL:     BEGIN
        FOR user_stat IN user_cursor LOOP
            INSERT INTO dashboard_stats (
                user_id,
                total_knowledge_base_count,
                total_file_count,
                total_storage_used,
                last_activity_date
            ) VALUES (
                user_stat.user_id,
                user_stat.total_knowledge_base_count,
                user_stat.total_file_count,
                user_stat.total_storage_used,
                user_stat.last_activity_date
            )
            ON CONFLICT (user_id) WHERE user_id IS NOT NULL
            DO UPDATE SET
                total_knowledge_base_count = EXCLUDED.total_knowledge_base_count,
                total_file_count = EXCLUDED.total_file_count,
                total_storage_used = EXCLUDED.total_storage_used,
                last_activity_date = EXCLUDED.last_activity_date,
                last_updated = CURRENT_TIMESTAMP;
2025-03-05 23:51:48,385 - app.database.database_factory - WARNING - Error executing statement, continuing with next: (sqlalchemy.dialects.postgresql.asyncpg.ProgrammingError) <class 'asyncpg.exceptions.PostgresSyntaxError'>: syntax error at or near "FOR"
[SQL:     BEGIN
        FOR user_stat IN user_cursor LOOP
            INSERT INTO dashboard_stats (
                user_id,
                total_knowledge_base_count,
                total_file_count,
                total_storage_used,
                last_activity_date
            ) VALUES (
                user_stat.user_id,
                user_stat.total_knowledge_base_count,
                user_stat.total_file_count,
                user_stat.total_storage_used,
                user_stat.last_activity_date
            )
            ON CONFLICT (user_id) WHERE user_id IS NOT NULL
            DO UPDATE SET
                total_knowledge_base_count = EXCLUDED.total_knowledge_base_count,
                total_file_count = EXCLUDED.total_file_count,
                total_storage_used = EXCLUDED.total_storage_used,
                last_activity_date = EXCLUDED.last_activity_date,
                last_updated = CURRENT_TIMESTAMP;]
(Background on this error at: https://sqlalche.me/e/20/f405)
2025-03-05 23:51:48,385 INFO sqlalchemy.engine.Engine BEGIN (implicit)
2025-03-05 23:51:48,385 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-03-05 23:51:48,385 INFO sqlalchemy.engine.Engine             batch_counter := batch_counter + 1;
2025-03-05 23:51:48,385 - sqlalchemy.engine.Engine - INFO -             batch_counter := batch_counter + 1;
2025-03-05 23:51:48,385 INFO sqlalchemy.engine.Engine [generated in 0.00011s] ()
2025-03-05 23:51:48,385 - sqlalchemy.engine.Engine - INFO - [generated in 0.00011s] ()
2025-03-05 23:51:48,889 INFO sqlalchemy.engine.Engine ROLLBACK
2025-03-05 23:51:48,889 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-03-05 23:51:49,058 - app.database.database_factory - ERROR - Error executing SQL statement: (sqlalchemy.dialects.postgresql.asyncpg.ProgrammingError) <class 'asyncpg.exceptions.PostgresSyntaxError'>: syntax error at or near "batch_counter"
[SQL:             batch_counter := batch_counter + 1;]
(Background on this error at: https://sqlalche.me/e/20/f405)
2025-03-05 23:51:49,058 - app.database.database_factory - DEBUG - Failed SQL:             batch_counter := batch_counter + 1;
2025-03-05 23:51:49,058 - app.database.database_factory - WARNING - Error executing statement, continuing with next: (sqlalchemy.dialects.postgresql.asyncpg.ProgrammingError) <class 'asyncpg.exceptions.PostgresSyntaxError'>: syntax error at or near "batch_counter"
[SQL:             batch_counter := batch_counter + 1;]
(Background on this error at: https://sqlalche.me/e/20/f405)
2025-03-05 23:51:49,058 INFO sqlalchemy.engine.Engine BEGIN (implicit)
2025-03-05 23:51:49,058 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-03-05 23:51:49,058 INFO sqlalchemy.engine.Engine             IF batch_counter >= batch_size THEN
                batch_counter := 0;
2025-03-05 23:51:49,058 - sqlalchemy.engine.Engine - INFO -             IF batch_counter >= batch_size THEN
                batch_counter := 0;
2025-03-05 23:51:49,058 INFO sqlalchemy.engine.Engine [generated in 0.00014s] ()
2025-03-05 23:51:49,058 - sqlalchemy.engine.Engine - INFO - [generated in 0.00014s] ()
2025-03-05 23:51:49,562 INFO sqlalchemy.engine.Engine ROLLBACK
2025-03-05 23:51:49,562 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-03-05 23:51:49,730 - app.database.database_factory - ERROR - Error executing SQL statement: (sqlalchemy.dialects.postgresql.asyncpg.ProgrammingError) <class 'asyncpg.exceptions.PostgresSyntaxError'>: syntax error at or near "IF"
[SQL:             IF batch_counter >= batch_size THEN
                batch_counter := 0;]
(Background on this error at: https://sqlalche.me/e/20/f405)
2025-03-05 23:51:49,730 - app.database.database_factory - DEBUG - Failed SQL:             IF batch_counter >= batch_size THEN
                batch_counter := 0;
2025-03-05 23:51:49,730 - app.database.database_factory - WARNING - Error executing statement, continuing with next: (sqlalchemy.dialects.postgresql.asyncpg.ProgrammingError) <class 'asyncpg.exceptions.PostgresSyntaxError'>: syntax error at or near "IF"
[SQL:             IF batch_counter >= batch_size THEN
                batch_counter := 0;]
(Background on this error at: https://sqlalche.me/e/20/f405)
2025-03-05 23:51:49,730 INFO sqlalchemy.engine.Engine BEGIN (implicit)
2025-03-05 23:51:49,730 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-03-05 23:51:49,731 INFO sqlalchemy.engine.Engine                 COMMIT;
2025-03-05 23:51:49,731 - sqlalchemy.engine.Engine - INFO -                 COMMIT;
2025-03-05 23:51:49,731 INFO sqlalchemy.engine.Engine [generated in 0.00020s] ()
2025-03-05 23:51:49,731 - sqlalchemy.engine.Engine - INFO - [generated in 0.00020s] ()
2025-03-05 23:51:50,234 INFO sqlalchemy.engine.Engine COMMIT
2025-03-05 23:51:50,234 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-03-05 23:51:50,403 INFO sqlalchemy.engine.Engine BEGIN (implicit)
2025-03-05 23:51:50,403 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-03-05 23:51:50,403 INFO sqlalchemy.engine.Engine             END IF;
2025-03-05 23:51:50,403 - sqlalchemy.engine.Engine - INFO -             END IF;
2025-03-05 23:51:50,404 INFO sqlalchemy.engine.Engine [generated in 0.00012s] ()
2025-03-05 23:51:50,404 - sqlalchemy.engine.Engine - INFO - [generated in 0.00012s] ()
2025-03-05 23:51:50,907 INFO sqlalchemy.engine.Engine ROLLBACK
2025-03-05 23:51:50,907 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-03-05 23:51:51,075 - app.database.database_factory - ERROR - Error executing SQL statement: (sqlalchemy.dialects.postgresql.asyncpg.ProgrammingError) <class 'asyncpg.exceptions.PostgresSyntaxError'>: syntax error at or near "IF"
[SQL:             END IF;]
(Background on this error at: https://sqlalche.me/e/20/f405)
2025-03-05 23:51:51,075 - app.database.database_factory - DEBUG - Failed SQL:             END IF;
2025-03-05 23:51:51,076 - app.database.database_factory - WARNING - Error executing statement, continuing with next: (sqlalchemy.dialects.postgresql.asyncpg.ProgrammingError) <class 'asyncpg.exceptions.PostgresSyntaxError'>: syntax error at or near "IF"
[SQL:             END IF;]
(Background on this error at: https://sqlalche.me/e/20/f405)
2025-03-05 23:51:51,076 INFO sqlalchemy.engine.Engine BEGIN (implicit)
2025-03-05 23:51:51,076 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-03-05 23:51:51,076 INFO sqlalchemy.engine.Engine         END LOOP;
2025-03-05 23:51:51,076 - sqlalchemy.engine.Engine - INFO -         END LOOP;
2025-03-05 23:51:51,076 INFO sqlalchemy.engine.Engine [generated in 0.00027s] ()
2025-03-05 23:51:51,076 - sqlalchemy.engine.Engine - INFO - [generated in 0.00027s] ()
2025-03-05 23:51:51,580 INFO sqlalchemy.engine.Engine ROLLBACK
2025-03-05 23:51:51,580 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-03-05 23:51:51,748 - app.database.database_factory - ERROR - Error executing SQL statement: (sqlalchemy.dialects.postgresql.asyncpg.ProgrammingError) <class 'asyncpg.exceptions.PostgresSyntaxError'>: syntax error at or near "LOOP"
[SQL:         END LOOP;]
(Background on this error at: https://sqlalche.me/e/20/f405)
2025-03-05 23:51:51,748 - app.database.database_factory - DEBUG - Failed SQL:         END LOOP;
2025-03-05 23:51:51,748 - app.database.database_factory - WARNING - Error executing statement, continuing with next: (sqlalchemy.dialects.postgresql.asyncpg.ProgrammingError) <class 'asyncpg.exceptions.PostgresSyntaxError'>: syntax error at or near "LOOP"
[SQL:         END LOOP;]
(Background on this error at: https://sqlalche.me/e/20/f405)
2025-03-05 23:51:51,748 INFO sqlalchemy.engine.Engine BEGIN (implicit)
2025-03-05 23:51:51,748 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-03-05 23:51:51,748 INFO sqlalchemy.engine.Engine         batch_counter := 0;
2025-03-05 23:51:51,748 - sqlalchemy.engine.Engine - INFO -         batch_counter := 0;
2025-03-05 23:51:51,748 INFO sqlalchemy.engine.Engine [generated in 0.00010s] ()
2025-03-05 23:51:51,748 - sqlalchemy.engine.Engine - INFO - [generated in 0.00010s] ()
2025-03-05 23:51:52,252 INFO sqlalchemy.engine.Engine ROLLBACK
2025-03-05 23:51:52,252 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-03-05 23:51:52,421 - app.database.database_factory - ERROR - Error executing SQL statement: (sqlalchemy.dialects.postgresql.asyncpg.ProgrammingError) <class 'asyncpg.exceptions.PostgresSyntaxError'>: syntax error at or near "batch_counter"
[SQL:         batch_counter := 0;]
(Background on this error at: https://sqlalche.me/e/20/f405)
2025-03-05 23:51:52,421 - app.database.database_factory - DEBUG - Failed SQL:         batch_counter := 0;
2025-03-05 23:51:52,421 - app.database.database_factory - WARNING - Error executing statement, continuing with next: (sqlalchemy.dialects.postgresql.asyncpg.ProgrammingError) <class 'asyncpg.exceptions.PostgresSyntaxError'>: syntax error at or near "batch_counter"
[SQL:         batch_counter := 0;]
(Background on this error at: https://sqlalche.me/e/20/f405)
2025-03-05 23:51:52,421 INFO sqlalchemy.engine.Engine BEGIN (implicit)
2025-03-05 23:51:52,421 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-03-05 23:51:52,422 INFO sqlalchemy.engine.Engine         FOR org_stat IN org_cursor LOOP
            INSERT INTO dashboard_stats (
                organization_id,
                total_knowledge_base_count,
                total_file_count,
                total_storage_used,
                last_activity_date
            ) VALUES (
                org_stat.organization_id,
                org_stat.total_knowledge_base_count,
                org_stat.total_file_count,
                org_stat.total_storage_used,
                org_stat.last_activity_date
            )
            ON CONFLICT (organization_id) WHERE organization_id IS NOT NULL
            DO UPDATE SET
                total_knowledge_base_count = EXCLUDED.total_knowledge_base_count,
                total_file_count = EXCLUDED.total_file_count,
                total_storage_used = EXCLUDED.total_storage_used,
                last_activity_date = EXCLUDED.last_activity_date,
                last_updated = CURRENT_TIMESTAMP;
2025-03-05 23:51:52,422 - sqlalchemy.engine.Engine - INFO -         FOR org_stat IN org_cursor LOOP
            INSERT INTO dashboard_stats (
                organization_id,
                total_knowledge_base_count,
                total_file_count,
                total_storage_used,
                last_activity_date
            ) VALUES (
                org_stat.organization_id,
                org_stat.total_knowledge_base_count,
                org_stat.total_file_count,
                org_stat.total_storage_used,
                org_stat.last_activity_date
            )
            ON CONFLICT (organization_id) WHERE organization_id IS NOT NULL
            DO UPDATE SET
                total_knowledge_base_count = EXCLUDED.total_knowledge_base_count,
                total_file_count = EXCLUDED.total_file_count,
                total_storage_used = EXCLUDED.total_storage_used,
                last_activity_date = EXCLUDED.last_activity_date,
                last_updated = CURRENT_TIMESTAMP;
2025-03-05 23:51:52,422 INFO sqlalchemy.engine.Engine [generated in 0.00016s] ()
2025-03-05 23:51:52,422 - sqlalchemy.engine.Engine - INFO - [generated in 0.00016s] ()
2025-03-05 23:51:52,925 INFO sqlalchemy.engine.Engine ROLLBACK
2025-03-05 23:51:52,925 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-03-05 23:51:53,094 - app.database.database_factory - ERROR - Error executing SQL statement: (sqlalchemy.dialects.postgresql.asyncpg.ProgrammingError) <class 'asyncpg.exceptions.PostgresSyntaxError'>: syntax error at or near "FOR"
[SQL:         FOR org_stat IN org_cursor LOOP
            INSERT INTO dashboard_stats (
                organization_id,
                total_knowledge_base_count,
                total_file_count,
                total_storage_used,
                last_activity_date
            ) VALUES (
                org_stat.organization_id,
                org_stat.total_knowledge_base_count,
                org_stat.total_file_count,
                org_stat.total_storage_used,
                org_stat.last_activity_date
            )
            ON CONFLICT (organization_id) WHERE organization_id IS NOT NULL
            DO UPDATE SET
                total_knowledge_base_count = EXCLUDED.total_knowledge_base_count,
                total_file_count = EXCLUDED.total_file_count,
                total_storage_used = EXCLUDED.total_storage_used,
                last_activity_date = EXCLUDED.last_activity_date,
                last_updated = CURRENT_TIMESTAMP;]
(Background on this error at: https://sqlalche.me/e/20/f405)
2025-03-05 23:51:53,094 - app.database.database_factory - DEBUG - Failed SQL:         FOR org_stat IN org_cursor LOOP
            INSERT INTO dashboard_stats (
                organization_id,
                total_knowledge_base_count,
                total_file_count,
                total_storage_used,
                last_activity_date
            ) VALUES (
                org_stat.organization_id,
                org_stat.total_knowledge_base_count,
                org_stat.total_file_count,
                org_stat.total_storage_used,
                org_stat.last_activity_date
            )
            ON CONFLICT (organization_id) WHERE organization_id IS NOT NULL
            DO UPDATE SET
                total_knowledge_base_count = EXCLUDED.total_knowledge_base_count,
                total_file_count = EXCLUDED.total_file_count,
                total_storage_used = EXCLUDED.total_storage_used,
                last_activity_date = EXCLUDED.last_activity_date,
                last_updated = CURRENT_TIMESTAMP;
2025-03-05 23:51:53,094 - app.database.database_factory - WARNING - Error executing statement, continuing with next: (sqlalchemy.dialects.postgresql.asyncpg.ProgrammingError) <class 'asyncpg.exceptions.PostgresSyntaxError'>: syntax error at or near "FOR"
[SQL:         FOR org_stat IN org_cursor LOOP
            INSERT INTO dashboard_stats (
                organization_id,
                total_knowledge_base_count,
                total_file_count,
                total_storage_used,
                last_activity_date
            ) VALUES (
                org_stat.organization_id,
                org_stat.total_knowledge_base_count,
                org_stat.total_file_count,
                org_stat.total_storage_used,
                org_stat.last_activity_date
            )
            ON CONFLICT (organization_id) WHERE organization_id IS NOT NULL
            DO UPDATE SET
                total_knowledge_base_count = EXCLUDED.total_knowledge_base_count,
                total_file_count = EXCLUDED.total_file_count,
                total_storage_used = EXCLUDED.total_storage_used,
                last_activity_date = EXCLUDED.last_activity_date,
                last_updated = CURRENT_TIMESTAMP;]
(Background on this error at: https://sqlalche.me/e/20/f405)
2025-03-05 23:51:53,094 INFO sqlalchemy.engine.Engine BEGIN (implicit)
2025-03-05 23:51:53,094 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-03-05 23:51:53,094 INFO sqlalchemy.engine.Engine             batch_counter := batch_counter + 1;
2025-03-05 23:51:53,094 - sqlalchemy.engine.Engine - INFO -             batch_counter := batch_counter + 1;
2025-03-05 23:51:53,094 INFO sqlalchemy.engine.Engine [cached since 4.709s ago] ()
2025-03-05 23:51:53,094 - sqlalchemy.engine.Engine - INFO - [cached since 4.709s ago] ()
2025-03-05 23:51:53,598 INFO sqlalchemy.engine.Engine ROLLBACK
2025-03-05 23:51:53,598 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-03-05 23:51:53,766 - app.database.database_factory - ERROR - Error executing SQL statement: (sqlalchemy.dialects.postgresql.asyncpg.ProgrammingError) <class 'asyncpg.exceptions.PostgresSyntaxError'>: syntax error at or near "batch_counter"
[SQL:             batch_counter := batch_counter + 1;]
(Background on this error at: https://sqlalche.me/e/20/f405)
2025-03-05 23:51:53,767 - app.database.database_factory - DEBUG - Failed SQL:             batch_counter := batch_counter + 1;
2025-03-05 23:51:53,767 - app.database.database_factory - WARNING - Error executing statement, continuing with next: (sqlalchemy.dialects.postgresql.asyncpg.ProgrammingError) <class 'asyncpg.exceptions.PostgresSyntaxError'>: syntax error at or near "batch_counter"
[SQL:             batch_counter := batch_counter + 1;]
(Background on this error at: https://sqlalche.me/e/20/f405)
2025-03-05 23:51:53,767 INFO sqlalchemy.engine.Engine BEGIN (implicit)
2025-03-05 23:51:53,767 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-03-05 23:51:53,767 INFO sqlalchemy.engine.Engine             IF batch_counter >= batch_size THEN
                batch_counter := 0;
2025-03-05 23:51:53,767 - sqlalchemy.engine.Engine - INFO -             IF batch_counter >= batch_size THEN
                batch_counter := 0;
2025-03-05 23:51:53,767 INFO sqlalchemy.engine.Engine [cached since 4.709s ago] ()
2025-03-05 23:51:53,767 - sqlalchemy.engine.Engine - INFO - [cached since 4.709s ago] ()
2025-03-05 23:51:54,271 INFO sqlalchemy.engine.Engine ROLLBACK
2025-03-05 23:51:54,271 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-03-05 23:51:54,439 - app.database.database_factory - ERROR - Error executing SQL statement: (sqlalchemy.dialects.postgresql.asyncpg.ProgrammingError) <class 'asyncpg.exceptions.PostgresSyntaxError'>: syntax error at or near "IF"
[SQL:             IF batch_counter >= batch_size THEN
                batch_counter := 0;]
(Background on this error at: https://sqlalche.me/e/20/f405)
2025-03-05 23:51:54,439 - app.database.database_factory - DEBUG - Failed SQL:             IF batch_counter >= batch_size THEN
                batch_counter := 0;
2025-03-05 23:51:54,439 - app.database.database_factory - WARNING - Error executing statement, continuing with next: (sqlalchemy.dialects.postgresql.asyncpg.ProgrammingError) <class 'asyncpg.exceptions.PostgresSyntaxError'>: syntax error at or near "IF"
[SQL:             IF batch_counter >= batch_size THEN
                batch_counter := 0;]
(Background on this error at: https://sqlalche.me/e/20/f405)
2025-03-05 23:51:54,439 INFO sqlalchemy.engine.Engine BEGIN (implicit)
2025-03-05 23:51:54,439 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-03-05 23:51:54,440 INFO sqlalchemy.engine.Engine                 COMMIT;
2025-03-05 23:51:54,440 - sqlalchemy.engine.Engine - INFO -                 COMMIT;
2025-03-05 23:51:54,440 INFO sqlalchemy.engine.Engine [cached since 4.709s ago] ()
2025-03-05 23:51:54,440 - sqlalchemy.engine.Engine - INFO - [cached since 4.709s ago] ()
2025-03-05 23:51:54,776 INFO sqlalchemy.engine.Engine COMMIT
2025-03-05 23:51:54,776 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-03-05 23:51:54,945 INFO sqlalchemy.engine.Engine BEGIN (implicit)
2025-03-05 23:51:54,945 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-03-05 23:51:54,945 INFO sqlalchemy.engine.Engine             END IF;
2025-03-05 23:51:54,945 - sqlalchemy.engine.Engine - INFO -             END IF;
2025-03-05 23:51:54,945 INFO sqlalchemy.engine.Engine [cached since 4.542s ago] ()
2025-03-05 23:51:54,945 - sqlalchemy.engine.Engine - INFO - [cached since 4.542s ago] ()
2025-03-05 23:51:55,448 INFO sqlalchemy.engine.Engine ROLLBACK
2025-03-05 23:51:55,448 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-03-05 23:51:55,616 - app.database.database_factory - ERROR - Error executing SQL statement: (sqlalchemy.dialects.postgresql.asyncpg.ProgrammingError) <class 'asyncpg.exceptions.PostgresSyntaxError'>: syntax error at or near "IF"
[SQL:             END IF;]
(Background on this error at: https://sqlalche.me/e/20/f405)
2025-03-05 23:51:55,616 - app.database.database_factory - DEBUG - Failed SQL:             END IF;
2025-03-05 23:51:55,616 - app.database.database_factory - WARNING - Error executing statement, continuing with next: (sqlalchemy.dialects.postgresql.asyncpg.ProgrammingError) <class 'asyncpg.exceptions.PostgresSyntaxError'>: syntax error at or near "IF"
[SQL:             END IF;]
(Background on this error at: https://sqlalche.me/e/20/f405)
2025-03-05 23:51:55,617 INFO sqlalchemy.engine.Engine BEGIN (implicit)
2025-03-05 23:51:55,617 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-03-05 23:51:55,617 INFO sqlalchemy.engine.Engine         END LOOP;
2025-03-05 23:51:55,617 - sqlalchemy.engine.Engine - INFO -         END LOOP;
2025-03-05 23:51:55,617 INFO sqlalchemy.engine.Engine [cached since 4.541s ago] ()
2025-03-05 23:51:55,617 - sqlalchemy.engine.Engine - INFO - [cached since 4.541s ago] ()
2025-03-05 23:51:56,120 INFO sqlalchemy.engine.Engine ROLLBACK
2025-03-05 23:51:56,120 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-03-05 23:51:56,288 - app.database.database_factory - ERROR - Error executing SQL statement: (sqlalchemy.dialects.postgresql.asyncpg.ProgrammingError) <class 'asyncpg.exceptions.PostgresSyntaxError'>: syntax error at or near "LOOP"
[SQL:         END LOOP;]
(Background on this error at: https://sqlalche.me/e/20/f405)
2025-03-05 23:51:56,288 - app.database.database_factory - DEBUG - Failed SQL:         END LOOP;
2025-03-05 23:51:56,288 - app.database.database_factory - WARNING - Error executing statement, continuing with next: (sqlalchemy.dialects.postgresql.asyncpg.ProgrammingError) <class 'asyncpg.exceptions.PostgresSyntaxError'>: syntax error at or near "LOOP"
[SQL:         END LOOP;]
(Background on this error at: https://sqlalche.me/e/20/f405)
2025-03-05 23:51:56,289 INFO sqlalchemy.engine.Engine BEGIN (implicit)
2025-03-05 23:51:56,289 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-03-05 23:51:56,289 INFO sqlalchemy.engine.Engine     END;
2025-03-05 23:51:56,289 - sqlalchemy.engine.Engine - INFO -     END;
2025-03-05 23:51:56,289 INFO sqlalchemy.engine.Engine [cached since 12.62s ago] ()
2025-03-05 23:51:56,289 - sqlalchemy.engine.Engine - INFO - [cached since 12.62s ago] ()
2025-03-05 23:51:56,625 INFO sqlalchemy.engine.Engine COMMIT
2025-03-05 23:51:56,625 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-03-05 23:51:56,793 INFO sqlalchemy.engine.Engine BEGIN (implicit)
2025-03-05 23:51:56,793 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-03-05 23:51:56,794 INFO sqlalchemy.engine.Engine     $func$ LANGUAGE plpgsql';
2025-03-05 23:51:56,794 - sqlalchemy.engine.Engine - INFO -     $func$ LANGUAGE plpgsql';
2025-03-05 23:51:56,794 INFO sqlalchemy.engine.Engine [cached since 12.45s ago] ()
2025-03-05 23:51:56,794 - sqlalchemy.engine.Engine - INFO - [cached since 12.45s ago] ()
2025-03-05 23:51:57,298 INFO sqlalchemy.engine.Engine ROLLBACK
2025-03-05 23:51:57,298 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-03-05 23:51:57,466 - app.database.database_factory - ERROR - Error executing SQL statement: (sqlalchemy.dialects.postgresql.asyncpg.ProgrammingError) <class 'asyncpg.exceptions.PostgresSyntaxError'>: unterminated dollar-quoted string at or near "$func$ LANGUAGE plpgsql';"
[SQL:     $func$ LANGUAGE plpgsql';]
(Background on this error at: https://sqlalche.me/e/20/f405)
2025-03-05 23:51:57,466 - app.database.database_factory - DEBUG - Failed SQL:     $func$ LANGUAGE plpgsql';
2025-03-05 23:51:57,466 - app.database.database_factory - WARNING - Error executing statement, continuing with next: (sqlalchemy.dialects.postgresql.asyncpg.ProgrammingError) <class 'asyncpg.exceptions.PostgresSyntaxError'>: unterminated dollar-quoted string at or near "$func$ LANGUAGE plpgsql';"
[SQL:     $func$ LANGUAGE plpgsql';]
(Background on this error at: https://sqlalche.me/e/20/f405)
2025-03-05 23:51:57,466 INFO sqlalchemy.engine.Engine BEGIN (implicit)
2025-03-05 23:51:57,466 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-03-05 23:51:57,467 INFO sqlalchemy.engine.Engine END $$;
2025-03-05 23:51:57,467 - sqlalchemy.engine.Engine - INFO - END $$;
2025-03-05 23:51:57,467 INFO sqlalchemy.engine.Engine [cached since 12.45s ago] ()
2025-03-05 23:51:57,467 - sqlalchemy.engine.Engine - INFO - [cached since 12.45s ago] ()
2025-03-05 23:51:57,971 INFO sqlalchemy.engine.Engine ROLLBACK
2025-03-05 23:51:57,971 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-03-05 23:51:58,140 - app.database.database_factory - ERROR - Error executing SQL statement: (sqlalchemy.dialects.postgresql.asyncpg.ProgrammingError) <class 'asyncpg.exceptions.PostgresSyntaxError'>: unterminated dollar-quoted string at or near "$$;"
[SQL: END $$;]
(Background on this error at: https://sqlalche.me/e/20/f405)
2025-03-05 23:51:58,140 - app.database.database_factory - DEBUG - Failed SQL: END $$;
2025-03-05 23:51:58,140 - app.database.database_factory - WARNING - Error executing statement, continuing with next: (sqlalchemy.dialects.postgresql.asyncpg.ProgrammingError) <class 'asyncpg.exceptions.PostgresSyntaxError'>: unterminated dollar-quoted string at or near "$$;"
[SQL: END $$;]
(Background on this error at: https://sqlalche.me/e/20/f405)
2025-03-05 23:51:58,140 INFO sqlalchemy.engine.Engine BEGIN (implicit)
2025-03-05 23:51:58,140 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-03-05 23:51:58,140 INFO sqlalchemy.engine.Engine DO $$
BEGIN
    EXECUTE 'CREATE OR REPLACE FUNCTION manage_dashboard_stats_cron_jobs()
    RETURNS void AS $func$
    BEGIN
        IF EXISTS (
            SELECT 1 
            FROM pg_extension 
            WHERE extname = ''pg_cron''
        ) THEN
            DELETE FROM cron.job WHERE jobname IN (''refresh_views_hourly'', ''update_stats_hourly'');
2025-03-05 23:51:58,140 - sqlalchemy.engine.Engine - INFO - DO $$
BEGIN
    EXECUTE 'CREATE OR REPLACE FUNCTION manage_dashboard_stats_cron_jobs()
    RETURNS void AS $func$
    BEGIN
        IF EXISTS (
            SELECT 1 
            FROM pg_extension 
            WHERE extname = ''pg_cron''
        ) THEN
            DELETE FROM cron.job WHERE jobname IN (''refresh_views_hourly'', ''update_stats_hourly'');
2025-03-05 23:51:58,140 INFO sqlalchemy.engine.Engine [generated in 0.00014s] ()
2025-03-05 23:51:58,140 - sqlalchemy.engine.Engine - INFO - [generated in 0.00014s] ()
2025-03-05 23:51:58,644 INFO sqlalchemy.engine.Engine ROLLBACK
2025-03-05 23:51:58,644 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-03-05 23:51:58,812 - app.database.database_factory - ERROR - Error executing SQL statement: (sqlalchemy.dialects.postgresql.asyncpg.ProgrammingError) <class 'asyncpg.exceptions.PostgresSyntaxError'>: unterminated dollar-quoted string at or near "$$
BEGIN
    EXECUTE 'CREATE OR REPLACE FUNCTION manage_dashboard_stats_cron_jobs()
    RETURNS void AS $func$
    BEGIN
        IF EXISTS (
            SELECT 1 
            FROM pg_extension 
            WHERE extname = ''pg_cron''
        ) THEN
            DELETE FROM cron.job WHERE jobname IN (''refresh_views_hourly'', ''update_stats_hourly'');"
[SQL: DO $$
BEGIN
    EXECUTE 'CREATE OR REPLACE FUNCTION manage_dashboard_stats_cron_jobs()
    RETURNS void AS $func$
    BEGIN
        IF EXISTS (
            SELECT 1 
            FROM pg_extension 
            WHERE extname = ''pg_cron''
        ) THEN
            DELETE FROM cron.job WHERE jobname IN (''refresh_views_hourly'', ''update_stats_hourly'');]
(Background on this error at: https://sqlalche.me/e/20/f405)
2025-03-05 23:51:58,812 - app.database.database_factory - DEBUG - Failed SQL: DO $$
BEGIN
    EXECUTE 'CREATE OR REPLACE FUNCTION manage_dashboard_stats_cron_jobs()
    RETURNS void AS $func$
    BEGIN
        IF EXISTS (
            SELECT 1 
            FROM pg_extension 
            WHERE extname = ''pg_cron''
        ) THEN
            DELETE FROM cron.job WHERE jobname IN (''refresh_views_hourly'', ''update_stats_hourly'');
2025-03-05 23:51:58,812 - app.database.database_factory - WARNING - Error executing statement, continuing with next: (sqlalchemy.dialects.postgresql.asyncpg.ProgrammingError) <class 'asyncpg.exceptions.PostgresSyntaxError'>: unterminated dollar-quoted string at or near "$$
BEGIN
    EXECUTE 'CREATE OR REPLACE FUNCTION manage_dashboard_stats_cron_jobs()
    RETURNS void AS $func$
    BEGIN
        IF EXISTS (
            SELECT 1 
            FROM pg_extension 
            WHERE extname = ''pg_cron''
        ) THEN
            DELETE FROM cron.job WHERE jobname IN (''refresh_views_hourly'', ''update_stats_hourly'');"
[SQL: DO $$
BEGIN
    EXECUTE 'CREATE OR REPLACE FUNCTION manage_dashboard_stats_cron_jobs()
    RETURNS void AS $func$
    BEGIN
        IF EXISTS (
            SELECT 1 
            FROM pg_extension 
            WHERE extname = ''pg_cron''
        ) THEN
            DELETE FROM cron.job WHERE jobname IN (''refresh_views_hourly'', ''update_stats_hourly'');]
(Background on this error at: https://sqlalche.me/e/20/f405)
2025-03-05 23:51:58,813 INFO sqlalchemy.engine.Engine BEGIN (implicit)
2025-03-05 23:51:58,813 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-03-05 23:51:58,813 INFO sqlalchemy.engine.Engine             INSERT INTO cron.job (jobname, schedule, command, nodename, nodeport, database, username)
            VALUES 
                (''refresh_views_hourly'', ''*/30 * * * *'', ''SELECT refresh_dashboard_stats_views()'', 
                ''localhost'', 5432, current_database(), current_user),
                (''update_stats_hourly'', ''0 * * * *'', ''SELECT update_dashboard_stats(1000)'', 
                ''localhost'', 5432, current_database(), current_user);
2025-03-05 23:51:58,813 - sqlalchemy.engine.Engine - INFO -             INSERT INTO cron.job (jobname, schedule, command, nodename, nodeport, database, username)
            VALUES 
                (''refresh_views_hourly'', ''*/30 * * * *'', ''SELECT refresh_dashboard_stats_views()'', 
                ''localhost'', 5432, current_database(), current_user),
                (''update_stats_hourly'', ''0 * * * *'', ''SELECT update_dashboard_stats(1000)'', 
                ''localhost'', 5432, current_database(), current_user);
2025-03-05 23:51:58,813 INFO sqlalchemy.engine.Engine [generated in 0.00013s] ()
2025-03-05 23:51:58,813 - sqlalchemy.engine.Engine - INFO - [generated in 0.00013s] ()
2025-03-05 23:51:59,319 INFO sqlalchemy.engine.Engine ROLLBACK
2025-03-05 23:51:59,319 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-03-05 23:51:59,487 - app.database.database_factory - ERROR - Error executing SQL statement: (sqlalchemy.dialects.postgresql.asyncpg.ProgrammingError) <class 'asyncpg.exceptions.PostgresSyntaxError'>: syntax error at or near "refresh_views_hourly"
[SQL:             INSERT INTO cron.job (jobname, schedule, command, nodename, nodeport, database, username)
            VALUES 
                (''refresh_views_hourly'', ''*/30 * * * *'', ''SELECT refresh_dashboard_stats_views()'', 
                ''localhost'', 5432, current_database(), current_user),
                (''update_stats_hourly'', ''0 * * * *'', ''SELECT update_dashboard_stats(1000)'', 
                ''localhost'', 5432, current_database(), current_user);]
(Background on this error at: https://sqlalche.me/e/20/f405)
2025-03-05 23:51:59,487 - app.database.database_factory - DEBUG - Failed SQL:             INSERT INTO cron.job (jobname, schedule, command, nodename, nodeport, database, username)
            VALUES 
                (''refresh_views_hourly'', ''*/30 * * * *'', ''SELECT refresh_dashboard_stats_views()'', 
                ''localhost'', 5432, current_database(), current_user),
                (''update_stats_hourly'', ''0 * * * *'', ''SELECT update_dashboard_stats(1000)'', 
                ''localhost'', 5432, current_database(), current_user);
2025-03-05 23:51:59,487 - app.database.database_factory - WARNING - Error executing statement, continuing with next: (sqlalchemy.dialects.postgresql.asyncpg.ProgrammingError) <class 'asyncpg.exceptions.PostgresSyntaxError'>: syntax error at or near "refresh_views_hourly"
[SQL:             INSERT INTO cron.job (jobname, schedule, command, nodename, nodeport, database, username)
            VALUES 
                (''refresh_views_hourly'', ''*/30 * * * *'', ''SELECT refresh_dashboard_stats_views()'', 
                ''localhost'', 5432, current_database(), current_user),
                (''update_stats_hourly'', ''0 * * * *'', ''SELECT update_dashboard_stats(1000)'', 
                ''localhost'', 5432, current_database(), current_user);]
(Background on this error at: https://sqlalche.me/e/20/f405)
2025-03-05 23:51:59,487 INFO sqlalchemy.engine.Engine BEGIN (implicit)
2025-03-05 23:51:59,487 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-03-05 23:51:59,488 INFO sqlalchemy.engine.Engine             RAISE NOTICE ''Dashboard stats cron jobs have been configured successfully'';
2025-03-05 23:51:59,488 - sqlalchemy.engine.Engine - INFO -             RAISE NOTICE ''Dashboard stats cron jobs have been configured successfully'';
2025-03-05 23:51:59,488 INFO sqlalchemy.engine.Engine [generated in 0.00011s] ()
2025-03-05 23:51:59,488 - sqlalchemy.engine.Engine - INFO - [generated in 0.00011s] ()
2025-03-05 23:51:59,991 INFO sqlalchemy.engine.Engine ROLLBACK
2025-03-05 23:51:59,991 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-03-05 23:52:00,159 - app.database.database_factory - ERROR - Error executing SQL statement: (sqlalchemy.dialects.postgresql.asyncpg.ProgrammingError) <class 'asyncpg.exceptions.PostgresSyntaxError'>: syntax error at or near "RAISE"
[SQL:             RAISE NOTICE ''Dashboard stats cron jobs have been configured successfully'';]
(Background on this error at: https://sqlalche.me/e/20/f405)
2025-03-05 23:52:00,160 - app.database.database_factory - DEBUG - Failed SQL:             RAISE NOTICE ''Dashboard stats cron jobs have been configured successfully'';
2025-03-05 23:52:00,160 - app.database.database_factory - WARNING - Error executing statement, continuing with next: (sqlalchemy.dialects.postgresql.asyncpg.ProgrammingError) <class 'asyncpg.exceptions.PostgresSyntaxError'>: syntax error at or near "RAISE"
[SQL:             RAISE NOTICE ''Dashboard stats cron jobs have been configured successfully'';]
(Background on this error at: https://sqlalche.me/e/20/f405)
2025-03-05 23:52:00,160 INFO sqlalchemy.engine.Engine BEGIN (implicit)
2025-03-05 23:52:00,160 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-03-05 23:52:00,160 INFO sqlalchemy.engine.Engine         ELSE
            RAISE WARNING ''pg_cron extension is not available. Cron jobs were not scheduled.'';
2025-03-05 23:52:00,160 - sqlalchemy.engine.Engine - INFO -         ELSE
            RAISE WARNING ''pg_cron extension is not available. Cron jobs were not scheduled.'';
2025-03-05 23:52:00,160 INFO sqlalchemy.engine.Engine [generated in 0.00012s] ()
2025-03-05 23:52:00,160 - sqlalchemy.engine.Engine - INFO - [generated in 0.00012s] ()
2025-03-05 23:52:00,664 INFO sqlalchemy.engine.Engine ROLLBACK
2025-03-05 23:52:00,664 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-03-05 23:52:00,832 - app.database.database_factory - ERROR - Error executing SQL statement: (sqlalchemy.dialects.postgresql.asyncpg.ProgrammingError) <class 'asyncpg.exceptions.PostgresSyntaxError'>: syntax error at or near "ELSE"
[SQL:         ELSE
            RAISE WARNING ''pg_cron extension is not available. Cron jobs were not scheduled.'';]
(Background on this error at: https://sqlalche.me/e/20/f405)
2025-03-05 23:52:00,832 - app.database.database_factory - DEBUG - Failed SQL:         ELSE
            RAISE WARNING ''pg_cron extension is not available. Cron jobs were not scheduled.'';
2025-03-05 23:52:00,832 - app.database.database_factory - WARNING - Error executing statement, continuing with next: (sqlalchemy.dialects.postgresql.asyncpg.ProgrammingError) <class 'asyncpg.exceptions.PostgresSyntaxError'>: syntax error at or near "ELSE"
[SQL:         ELSE
            RAISE WARNING ''pg_cron extension is not available. Cron jobs were not scheduled.'';]
(Background on this error at: https://sqlalche.me/e/20/f405)
2025-03-05 23:52:00,832 INFO sqlalchemy.engine.Engine BEGIN (implicit)
2025-03-05 23:52:00,832 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-03-05 23:52:00,833 INFO sqlalchemy.engine.Engine         END IF;
2025-03-05 23:52:00,833 - sqlalchemy.engine.Engine - INFO -         END IF;
2025-03-05 23:52:00,833 INFO sqlalchemy.engine.Engine [generated in 0.00019s] ()
2025-03-05 23:52:00,833 - sqlalchemy.engine.Engine - INFO - [generated in 0.00019s] ()
2025-03-05 23:52:01,336 INFO sqlalchemy.engine.Engine ROLLBACK
2025-03-05 23:52:01,336 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-03-05 23:52:01,505 - app.database.database_factory - ERROR - Error executing SQL statement: (sqlalchemy.dialects.postgresql.asyncpg.ProgrammingError) <class 'asyncpg.exceptions.PostgresSyntaxError'>: syntax error at or near "IF"
[SQL:         END IF;]
(Background on this error at: https://sqlalche.me/e/20/f405)
2025-03-05 23:52:01,505 - app.database.database_factory - DEBUG - Failed SQL:         END IF;
2025-03-05 23:52:01,505 - app.database.database_factory - WARNING - Error executing statement, continuing with next: (sqlalchemy.dialects.postgresql.asyncpg.ProgrammingError) <class 'asyncpg.exceptions.PostgresSyntaxError'>: syntax error at or near "IF"
[SQL:         END IF;]
(Background on this error at: https://sqlalche.me/e/20/f405)
2025-03-05 23:52:01,505 INFO sqlalchemy.engine.Engine BEGIN (implicit)
2025-03-05 23:52:01,505 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-03-05 23:52:01,505 INFO sqlalchemy.engine.Engine     EXCEPTION WHEN OTHERS THEN
        RAISE WARNING ''Error managing cron jobs: %'', SQLERRM;
2025-03-05 23:52:01,505 - sqlalchemy.engine.Engine - INFO -     EXCEPTION WHEN OTHERS THEN
        RAISE WARNING ''Error managing cron jobs: %'', SQLERRM;
2025-03-05 23:52:01,505 INFO sqlalchemy.engine.Engine [generated in 0.00011s] ()
2025-03-05 23:52:01,505 - sqlalchemy.engine.Engine - INFO - [generated in 0.00011s] ()
2025-03-05 23:52:02,009 INFO sqlalchemy.engine.Engine ROLLBACK
2025-03-05 23:52:02,009 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-03-05 23:52:02,177 - app.database.database_factory - ERROR - Error executing SQL statement: (sqlalchemy.dialects.postgresql.asyncpg.ProgrammingError) <class 'asyncpg.exceptions.PostgresSyntaxError'>: syntax error at or near "EXCEPTION"
[SQL:     EXCEPTION WHEN OTHERS THEN
        RAISE WARNING ''Error managing cron jobs: %'', SQLERRM;]
(Background on this error at: https://sqlalche.me/e/20/f405)
2025-03-05 23:52:02,178 - app.database.database_factory - DEBUG - Failed SQL:     EXCEPTION WHEN OTHERS THEN
        RAISE WARNING ''Error managing cron jobs: %'', SQLERRM;
2025-03-05 23:52:02,178 - app.database.database_factory - WARNING - Error executing statement, continuing with next: (sqlalchemy.dialects.postgresql.asyncpg.ProgrammingError) <class 'asyncpg.exceptions.PostgresSyntaxError'>: syntax error at or near "EXCEPTION"
[SQL:     EXCEPTION WHEN OTHERS THEN
        RAISE WARNING ''Error managing cron jobs: %'', SQLERRM;]
(Background on this error at: https://sqlalche.me/e/20/f405)
2025-03-05 23:52:02,178 INFO sqlalchemy.engine.Engine BEGIN (implicit)
2025-03-05 23:52:02,178 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-03-05 23:52:02,178 INFO sqlalchemy.engine.Engine     END;
2025-03-05 23:52:02,178 - sqlalchemy.engine.Engine - INFO -     END;
2025-03-05 23:52:02,178 INFO sqlalchemy.engine.Engine [cached since 18.51s ago] ()
2025-03-05 23:52:02,178 - sqlalchemy.engine.Engine - INFO - [cached since 18.51s ago] ()
2025-03-05 23:52:02,514 INFO sqlalchemy.engine.Engine COMMIT
2025-03-05 23:52:02,514 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-03-05 23:52:02,682 INFO sqlalchemy.engine.Engine BEGIN (implicit)
2025-03-05 23:52:02,682 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-03-05 23:52:02,683 INFO sqlalchemy.engine.Engine     $func$ LANGUAGE plpgsql';
2025-03-05 23:52:02,683 - sqlalchemy.engine.Engine - INFO -     $func$ LANGUAGE plpgsql';
2025-03-05 23:52:02,683 INFO sqlalchemy.engine.Engine [cached since 18.34s ago] ()
2025-03-05 23:52:02,683 - sqlalchemy.engine.Engine - INFO - [cached since 18.34s ago] ()
2025-03-05 23:52:03,189 INFO sqlalchemy.engine.Engine ROLLBACK
2025-03-05 23:52:03,189 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-03-05 23:52:03,364 - app.database.database_factory - ERROR - Error executing SQL statement: (sqlalchemy.dialects.postgresql.asyncpg.ProgrammingError) <class 'asyncpg.exceptions.PostgresSyntaxError'>: unterminated dollar-quoted string at or near "$func$ LANGUAGE plpgsql';"
[SQL:     $func$ LANGUAGE plpgsql';]
(Background on this error at: https://sqlalche.me/e/20/f405)
2025-03-05 23:52:03,364 - app.database.database_factory - DEBUG - Failed SQL:     $func$ LANGUAGE plpgsql';
2025-03-05 23:52:03,364 - app.database.database_factory - WARNING - Error executing statement, continuing with next: (sqlalchemy.dialects.postgresql.asyncpg.ProgrammingError) <class 'asyncpg.exceptions.PostgresSyntaxError'>: unterminated dollar-quoted string at or near "$func$ LANGUAGE plpgsql';"
[SQL:     $func$ LANGUAGE plpgsql';]
(Background on this error at: https://sqlalche.me/e/20/f405)
2025-03-05 23:52:03,364 INFO sqlalchemy.engine.Engine BEGIN (implicit)
2025-03-05 23:52:03,364 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-03-05 23:52:03,365 INFO sqlalchemy.engine.Engine END $$;
2025-03-05 23:52:03,365 - sqlalchemy.engine.Engine - INFO - END $$;
2025-03-05 23:52:03,365 INFO sqlalchemy.engine.Engine [cached since 18.35s ago] ()
2025-03-05 23:52:03,365 - sqlalchemy.engine.Engine - INFO - [cached since 18.35s ago] ()
2025-03-05 23:52:03,869 INFO sqlalchemy.engine.Engine ROLLBACK
2025-03-05 23:52:03,869 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-03-05 23:52:04,038 - app.database.database_factory - ERROR - Error executing SQL statement: (sqlalchemy.dialects.postgresql.asyncpg.ProgrammingError) <class 'asyncpg.exceptions.PostgresSyntaxError'>: unterminated dollar-quoted string at or near "$$;"
[SQL: END $$;]
(Background on this error at: https://sqlalche.me/e/20/f405)
2025-03-05 23:52:04,038 - app.database.database_factory - DEBUG - Failed SQL: END $$;
2025-03-05 23:52:04,038 - app.database.database_factory - WARNING - Error executing statement, continuing with next: (sqlalchemy.dialects.postgresql.asyncpg.ProgrammingError) <class 'asyncpg.exceptions.PostgresSyntaxError'>: unterminated dollar-quoted string at or near "$$;"
[SQL: END $$;]
(Background on this error at: https://sqlalche.me/e/20/f405)
2025-03-05 23:52:04,038 INFO sqlalchemy.engine.Engine BEGIN (implicit)
2025-03-05 23:52:04,038 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-03-05 23:52:04,039 INFO sqlalchemy.engine.Engine CREATE OR REPLACE FUNCTION update_user_stats(p_user_id integer)
RETURNS void AS $$
BEGIN
    WITH user_stats AS (
        SELECT 
            u.id as user_id,
            COUNT(DISTINCT kb.id) as total_knowledge_base_count,
            COUNT(DISTINCT f.id) as total_file_count,
            COALESCE(SUM(f.file_size), 0) as total_storage_used,
            MAX(GREATEST(COALESCE(kb.updated_at, '1970-01-01'), COALESCE(f.updated_at, '1970-01-01'))) as last_activity_date
        FROM users u
        LEFT JOIN files f ON f.user_id = u.id
        LEFT JOIN knowledge_base kb ON kb.file_id = f.id
        WHERE u.id = p_user_id
        GROUP BY u.id
    )
    INSERT INTO dashboard_stats (
        user_id,
        total_knowledge_base_count,
        total_file_count,
        total_storage_used,
        last_activity_date
    )
    SELECT * FROM user_stats
    ON CONFLICT (user_id) WHERE user_id IS NOT NULL
    DO UPDATE SET
        total_knowledge_base_count = EXCLUDED.total_knowledge_base_count,
        total_file_count = EXCLUDED.total_file_count,
        total_storage_used = EXCLUDED.total_storage_used,
        last_activity_date = EXCLUDED.last_activity_date,
        last_updated = CURRENT_TIMESTAMP;
2025-03-05 23:52:04,039 - sqlalchemy.engine.Engine - INFO - CREATE OR REPLACE FUNCTION update_user_stats(p_user_id integer)
RETURNS void AS $$
BEGIN
    WITH user_stats AS (
        SELECT 
            u.id as user_id,
            COUNT(DISTINCT kb.id) as total_knowledge_base_count,
            COUNT(DISTINCT f.id) as total_file_count,
            COALESCE(SUM(f.file_size), 0) as total_storage_used,
            MAX(GREATEST(COALESCE(kb.updated_at, '1970-01-01'), COALESCE(f.updated_at, '1970-01-01'))) as last_activity_date
        FROM users u
        LEFT JOIN files f ON f.user_id = u.id
        LEFT JOIN knowledge_base kb ON kb.file_id = f.id
        WHERE u.id = p_user_id
        GROUP BY u.id
    )
    INSERT INTO dashboard_stats (
        user_id,
        total_knowledge_base_count,
        total_file_count,
        total_storage_used,
        last_activity_date
    )
    SELECT * FROM user_stats
    ON CONFLICT (user_id) WHERE user_id IS NOT NULL
    DO UPDATE SET
        total_knowledge_base_count = EXCLUDED.total_knowledge_base_count,
        total_file_count = EXCLUDED.total_file_count,
        total_storage_used = EXCLUDED.total_storage_used,
        last_activity_date = EXCLUDED.last_activity_date,
        last_updated = CURRENT_TIMESTAMP;
2025-03-05 23:52:04,040 INFO sqlalchemy.engine.Engine [generated in 0.00051s] ()
2025-03-05 23:52:04,040 - sqlalchemy.engine.Engine - INFO - [generated in 0.00051s] ()
2025-03-05 23:52:04,545 INFO sqlalchemy.engine.Engine ROLLBACK
2025-03-05 23:52:04,545 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-03-05 23:52:04,713 - app.database.database_factory - ERROR - Error executing SQL statement: (sqlalchemy.dialects.postgresql.asyncpg.ProgrammingError) <class 'asyncpg.exceptions.PostgresSyntaxError'>: unterminated dollar-quoted string at or near "$$
BEGIN
    WITH user_stats AS (
        SELECT 
            u.id as user_id,
            COUNT(DISTINCT kb.id) as total_knowledge_base_count,
            COUNT(DISTINCT f.id) as total_file_count,
            COALESCE(SUM(f.file_size), 0) as total_storage_used,
            MAX(GREATEST(COALESCE(kb.updated_at, '1970-01-01'), COALESCE(f.updated_at, '1970-01-01'))) as last_activity_date
        FROM users u
        LEFT JOIN files f ON f.user_id = u.id
        LEFT JOIN knowledge_base kb ON kb.file_id = f.id
        WHERE u.id = p_user_id
        GROUP BY u.id
    )
    INSERT INTO dashboard_stats (
        user_id,
        total_knowledge_base_count,
        total_file_count,
        total_storage_used,
        last_activity_date
    )
    SELECT * FROM user_stats
    ON CONFLICT (user_id) WHERE user_id IS NOT NULL
    DO UPDATE SET
        total_knowledge_base_count = EXCLUDED.total_knowledge_base_count,
        total_file_count = EXCLUDED.total_file_count,
        total_storage_used = EXCLUDED.total_storage_used,
        last_activity_date = EXCLUDED.last_activity_date,
        last_updated = CURRENT_TIMESTAMP;"
[SQL: CREATE OR REPLACE FUNCTION update_user_stats(p_user_id integer)
RETURNS void AS $$
BEGIN
    WITH user_stats AS (
        SELECT 
            u.id as user_id,
            COUNT(DISTINCT kb.id) as total_knowledge_base_count,
            COUNT(DISTINCT f.id) as total_file_count,
            COALESCE(SUM(f.file_size), 0) as total_storage_used,
            MAX(GREATEST(COALESCE(kb.updated_at, '1970-01-01'), COALESCE(f.updated_at, '1970-01-01'))) as last_activity_date
        FROM users u
        LEFT JOIN files f ON f.user_id = u.id
        LEFT JOIN knowledge_base kb ON kb.file_id = f.id
        WHERE u.id = p_user_id
        GROUP BY u.id
    )
    INSERT INTO dashboard_stats (
        user_id,
        total_knowledge_base_count,
        total_file_count,
        total_storage_used,
        last_activity_date
    )
    SELECT * FROM user_stats
    ON CONFLICT (user_id) WHERE user_id IS NOT NULL
    DO UPDATE SET
        total_knowledge_base_count = EXCLUDED.total_knowledge_base_count,
        total_file_count = EXCLUDED.total_file_count,
        total_storage_used = EXCLUDED.total_storage_used,
        last_activity_date = EXCLUDED.last_activity_date,
        last_updated = CURRENT_TIMESTAMP;]
(Background on this error at: https://sqlalche.me/e/20/f405)
2025-03-05 23:52:04,713 - app.database.database_factory - DEBUG - Failed SQL: CREATE OR REPLACE FUNCTION update_user_stats(p_user_id integer)
RETURNS void AS $$
BEGIN
    WITH user_stats AS (
        SELECT 
            u.id as user_id,
            COUNT(DISTINCT kb.id) as total_knowledge_base_count,
            COUNT(DISTINCT f.id) as total_file_count,
            COALESCE(SUM(f.file_size), 0) as total_storage_used,
            MAX(GREATEST(COALESCE(kb.updated_at, '1970-01-01'), COALESCE(f.updated_at, '1970-01-01'))) as last_activity_date
        FROM users u
        LEFT JOIN files f ON f.user_id = u.id
        LEFT JOIN knowledge_base kb ON kb.file_id = f.id
        WHERE u.id = p_user_id
        GROUP BY u.id
    )
    INSERT INTO dashboard_stats (
        user_id,
        total_knowledge_base_count,
        total_file_count,
        total_storage_used,
        last_activity_date
    )
    SELECT * FROM user_stats
    ON CONFLICT (user_id) WHERE user_id IS NOT NULL
    DO UPDATE SET
        total_knowledge_base_count = EXCLUDED.total_knowledge_base_count,
        total_file_count = EXCLUDED.total_file_count,
        total_storage_used = EXCLUDED.total_storage_used,
        last_activity_date = EXCLUDED.last_activity_date,
        last_updated = CURRENT_TIMESTAMP;
2025-03-05 23:52:04,713 - app.database.database_factory - WARNING - Error executing statement, continuing with next: (sqlalchemy.dialects.postgresql.asyncpg.ProgrammingError) <class 'asyncpg.exceptions.PostgresSyntaxError'>: unterminated dollar-quoted string at or near "$$
BEGIN
    WITH user_stats AS (
        SELECT 
            u.id as user_id,
            COUNT(DISTINCT kb.id) as total_knowledge_base_count,
            COUNT(DISTINCT f.id) as total_file_count,
            COALESCE(SUM(f.file_size), 0) as total_storage_used,
            MAX(GREATEST(COALESCE(kb.updated_at, '1970-01-01'), COALESCE(f.updated_at, '1970-01-01'))) as last_activity_date
        FROM users u
        LEFT JOIN files f ON f.user_id = u.id
        LEFT JOIN knowledge_base kb ON kb.file_id = f.id
        WHERE u.id = p_user_id
        GROUP BY u.id
    )
    INSERT INTO dashboard_stats (
        user_id,
        total_knowledge_base_count,
        total_file_count,
        total_storage_used,
        last_activity_date
    )
    SELECT * FROM user_stats
    ON CONFLICT (user_id) WHERE user_id IS NOT NULL
    DO UPDATE SET
        total_knowledge_base_count = EXCLUDED.total_knowledge_base_count,
        total_file_count = EXCLUDED.total_file_count,
        total_storage_used = EXCLUDED.total_storage_used,
        last_activity_date = EXCLUDED.last_activity_date,
        last_updated = CURRENT_TIMESTAMP;"
[SQL: CREATE OR REPLACE FUNCTION update_user_stats(p_user_id integer)
RETURNS void AS $$
BEGIN
    WITH user_stats AS (
        SELECT 
            u.id as user_id,
            COUNT(DISTINCT kb.id) as total_knowledge_base_count,
            COUNT(DISTINCT f.id) as total_file_count,
            COALESCE(SUM(f.file_size), 0) as total_storage_used,
            MAX(GREATEST(COALESCE(kb.updated_at, '1970-01-01'), COALESCE(f.updated_at, '1970-01-01'))) as last_activity_date
        FROM users u
        LEFT JOIN files f ON f.user_id = u.id
        LEFT JOIN knowledge_base kb ON kb.file_id = f.id
        WHERE u.id = p_user_id
        GROUP BY u.id
    )
    INSERT INTO dashboard_stats (
        user_id,
        total_knowledge_base_count,
        total_file_count,
        total_storage_used,
        last_activity_date
    )
    SELECT * FROM user_stats
    ON CONFLICT (user_id) WHERE user_id IS NOT NULL
    DO UPDATE SET
        total_knowledge_base_count = EXCLUDED.total_knowledge_base_count,
        total_file_count = EXCLUDED.total_file_count,
        total_storage_used = EXCLUDED.total_storage_used,
        last_activity_date = EXCLUDED.last_activity_date,
        last_updated = CURRENT_TIMESTAMP;]
(Background on this error at: https://sqlalche.me/e/20/f405)
2025-03-05 23:52:04,713 INFO sqlalchemy.engine.Engine BEGIN (implicit)
2025-03-05 23:52:04,713 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-03-05 23:52:04,714 INFO sqlalchemy.engine.Engine END;
2025-03-05 23:52:04,714 - sqlalchemy.engine.Engine - INFO - END;
2025-03-05 23:52:04,714 INFO sqlalchemy.engine.Engine [generated in 0.00012s] ()
2025-03-05 23:52:04,714 - sqlalchemy.engine.Engine - INFO - [generated in 0.00012s] ()
2025-03-05 23:52:05,217 INFO sqlalchemy.engine.Engine COMMIT
2025-03-05 23:52:05,217 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-03-05 23:52:05,386 INFO sqlalchemy.engine.Engine BEGIN (implicit)
2025-03-05 23:52:05,386 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-03-05 23:52:05,386 INFO sqlalchemy.engine.Engine $$ LANGUAGE plpgsql;
2025-03-05 23:52:05,386 - sqlalchemy.engine.Engine - INFO - $$ LANGUAGE plpgsql;
2025-03-05 23:52:05,386 INFO sqlalchemy.engine.Engine [generated in 0.00013s] ()
2025-03-05 23:52:05,386 - sqlalchemy.engine.Engine - INFO - [generated in 0.00013s] ()
2025-03-05 23:52:05,889 INFO sqlalchemy.engine.Engine ROLLBACK
2025-03-05 23:52:05,889 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-03-05 23:52:06,059 - app.database.database_factory - ERROR - Error executing SQL statement: (sqlalchemy.dialects.postgresql.asyncpg.ProgrammingError) <class 'asyncpg.exceptions.PostgresSyntaxError'>: unterminated dollar-quoted string at or near "$$ LANGUAGE plpgsql;"
[SQL: $$ LANGUAGE plpgsql;]
(Background on this error at: https://sqlalche.me/e/20/f405)
2025-03-05 23:52:06,059 - app.database.database_factory - DEBUG - Failed SQL: $$ LANGUAGE plpgsql;
2025-03-05 23:52:06,059 - app.database.database_factory - WARNING - Error executing statement, continuing with next: (sqlalchemy.dialects.postgresql.asyncpg.ProgrammingError) <class 'asyncpg.exceptions.PostgresSyntaxError'>: unterminated dollar-quoted string at or near "$$ LANGUAGE plpgsql;"
[SQL: $$ LANGUAGE plpgsql;]
(Background on this error at: https://sqlalche.me/e/20/f405)
2025-03-05 23:52:06,059 INFO sqlalchemy.engine.Engine BEGIN (implicit)
2025-03-05 23:52:06,059 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-03-05 23:52:06,060 INFO sqlalchemy.engine.Engine CREATE OR REPLACE FUNCTION update_organization_stats(p_organization_id integer)
RETURNS void AS $$
BEGIN
    WITH org_stats AS (
        SELECT 
            o.id as organization_id,
            COUNT(DISTINCT kb.id) as total_knowledge_base_count,
            COUNT(DISTINCT f.id) as total_file_count,
            COALESCE(SUM(f.file_size), 0) as total_storage_used,
            MAX(GREATEST(COALESCE(kb.updated_at, '1970-01-01'), COALESCE(f.updated_at, '1970-01-01'))) as last_activity_date
        FROM organizations o
        LEFT JOIN files f ON f.organization_id = o.id
        LEFT JOIN knowledge_base kb ON kb.file_id = f.id
        WHERE o.id = p_organization_id
        GROUP BY o.id
    )
    INSERT INTO dashboard_stats (
        organization_id,
        total_knowledge_base_count,
        total_file_count,
        total_storage_used,
        last_activity_date
    )
    SELECT * FROM org_stats
    ON CONFLICT (organization_id) WHERE organization_id IS NOT NULL
    DO UPDATE SET
        total_knowledge_base_count = EXCLUDED.total_knowledge_base_count,
        total_file_count = EXCLUDED.total_file_count,
        total_storage_used = EXCLUDED.total_storage_used,
        last_activity_date = EXCLUDED.last_activity_date,
        last_updated = CURRENT_TIMESTAMP;
2025-03-05 23:52:06,060 - sqlalchemy.engine.Engine - INFO - CREATE OR REPLACE FUNCTION update_organization_stats(p_organization_id integer)
RETURNS void AS $$
BEGIN
    WITH org_stats AS (
        SELECT 
            o.id as organization_id,
            COUNT(DISTINCT kb.id) as total_knowledge_base_count,
            COUNT(DISTINCT f.id) as total_file_count,
            COALESCE(SUM(f.file_size), 0) as total_storage_used,
            MAX(GREATEST(COALESCE(kb.updated_at, '1970-01-01'), COALESCE(f.updated_at, '1970-01-01'))) as last_activity_date
        FROM organizations o
        LEFT JOIN files f ON f.organization_id = o.id
        LEFT JOIN knowledge_base kb ON kb.file_id = f.id
        WHERE o.id = p_organization_id
        GROUP BY o.id
    )
    INSERT INTO dashboard_stats (
        organization_id,
        total_knowledge_base_count,
        total_file_count,
        total_storage_used,
        last_activity_date
    )
    SELECT * FROM org_stats
    ON CONFLICT (organization_id) WHERE organization_id IS NOT NULL
    DO UPDATE SET
        total_knowledge_base_count = EXCLUDED.total_knowledge_base_count,
        total_file_count = EXCLUDED.total_file_count,
        total_storage_used = EXCLUDED.total_storage_used,
        last_activity_date = EXCLUDED.last_activity_date,
        last_updated = CURRENT_TIMESTAMP;
2025-03-05 23:52:06,060 INFO sqlalchemy.engine.Engine [generated in 0.00025s] ()
2025-03-05 23:52:06,060 - sqlalchemy.engine.Engine - INFO - [generated in 0.00025s] ()
2025-03-05 23:52:06,565 INFO sqlalchemy.engine.Engine ROLLBACK
2025-03-05 23:52:06,565 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-03-05 23:52:06,734 - app.database.database_factory - ERROR - Error executing SQL statement: (sqlalchemy.dialects.postgresql.asyncpg.ProgrammingError) <class 'asyncpg.exceptions.PostgresSyntaxError'>: unterminated dollar-quoted string at or near "$$
BEGIN
    WITH org_stats AS (
        SELECT 
            o.id as organization_id,
            COUNT(DISTINCT kb.id) as total_knowledge_base_count,
            COUNT(DISTINCT f.id) as total_file_count,
            COALESCE(SUM(f.file_size), 0) as total_storage_used,
            MAX(GREATEST(COALESCE(kb.updated_at, '1970-01-01'), COALESCE(f.updated_at, '1970-01-01'))) as last_activity_date
        FROM organizations o
        LEFT JOIN files f ON f.organization_id = o.id
        LEFT JOIN knowledge_base kb ON kb.file_id = f.id
        WHERE o.id = p_organization_id
        GROUP BY o.id
    )
    INSERT INTO dashboard_stats (
        organization_id,
        total_knowledge_base_count,
        total_file_count,
        total_storage_used,
        last_activity_date
    )
    SELECT * FROM org_stats
    ON CONFLICT (organization_id) WHERE organization_id IS NOT NULL
    DO UPDATE SET
        total_knowledge_base_count = EXCLUDED.total_knowledge_base_count,
        total_file_count = EXCLUDED.total_file_count,
        total_storage_used = EXCLUDED.total_storage_used,
        last_activity_date = EXCLUDED.last_activity_date,
        last_updated = CURRENT_TIMESTAMP;"
[SQL: CREATE OR REPLACE FUNCTION update_organization_stats(p_organization_id integer)
RETURNS void AS $$
BEGIN
    WITH org_stats AS (
        SELECT 
            o.id as organization_id,
            COUNT(DISTINCT kb.id) as total_knowledge_base_count,
            COUNT(DISTINCT f.id) as total_file_count,
            COALESCE(SUM(f.file_size), 0) as total_storage_used,
            MAX(GREATEST(COALESCE(kb.updated_at, '1970-01-01'), COALESCE(f.updated_at, '1970-01-01'))) as last_activity_date
        FROM organizations o
        LEFT JOIN files f ON f.organization_id = o.id
        LEFT JOIN knowledge_base kb ON kb.file_id = f.id
        WHERE o.id = p_organization_id
        GROUP BY o.id
    )
    INSERT INTO dashboard_stats (
        organization_id,
        total_knowledge_base_count,
        total_file_count,
        total_storage_used,
        last_activity_date
    )
    SELECT * FROM org_stats
    ON CONFLICT (organization_id) WHERE organization_id IS NOT NULL
    DO UPDATE SET
        total_knowledge_base_count = EXCLUDED.total_knowledge_base_count,
        total_file_count = EXCLUDED.total_file_count,
        total_storage_used = EXCLUDED.total_storage_used,
        last_activity_date = EXCLUDED.last_activity_date,
        last_updated = CURRENT_TIMESTAMP;]
(Background on this error at: https://sqlalche.me/e/20/f405)
2025-03-05 23:52:06,734 - app.database.database_factory - DEBUG - Failed SQL: CREATE OR REPLACE FUNCTION update_organization_stats(p_organization_id integer)
RETURNS void AS $$
BEGIN
    WITH org_stats AS (
        SELECT 
            o.id as organization_id,
            COUNT(DISTINCT kb.id) as total_knowledge_base_count,
            COUNT(DISTINCT f.id) as total_file_count,
            COALESCE(SUM(f.file_size), 0) as total_storage_used,
            MAX(GREATEST(COALESCE(kb.updated_at, '1970-01-01'), COALESCE(f.updated_at, '1970-01-01'))) as last_activity_date
        FROM organizations o
        LEFT JOIN files f ON f.organization_id = o.id
        LEFT JOIN knowledge_base kb ON kb.file_id = f.id
        WHERE o.id = p_organization_id
        GROUP BY o.id
    )
    INSERT INTO dashboard_stats (
        organization_id,
        total_knowledge_base_count,
        total_file_count,
        total_storage_used,
        last_activity_date
    )
    SELECT * FROM org_stats
    ON CONFLICT (organization_id) WHERE organization_id IS NOT NULL
    DO UPDATE SET
        total_knowledge_base_count = EXCLUDED.total_knowledge_base_count,
        total_file_count = EXCLUDED.total_file_count,
        total_storage_used = EXCLUDED.total_storage_used,
        last_activity_date = EXCLUDED.last_activity_date,
        last_updated = CURRENT_TIMESTAMP;
2025-03-05 23:52:06,734 - app.database.database_factory - WARNING - Error executing statement, continuing with next: (sqlalchemy.dialects.postgresql.asyncpg.ProgrammingError) <class 'asyncpg.exceptions.PostgresSyntaxError'>: unterminated dollar-quoted string at or near "$$
BEGIN
    WITH org_stats AS (
        SELECT 
            o.id as organization_id,
            COUNT(DISTINCT kb.id) as total_knowledge_base_count,
            COUNT(DISTINCT f.id) as total_file_count,
            COALESCE(SUM(f.file_size), 0) as total_storage_used,
            MAX(GREATEST(COALESCE(kb.updated_at, '1970-01-01'), COALESCE(f.updated_at, '1970-01-01'))) as last_activity_date
        FROM organizations o
        LEFT JOIN files f ON f.organization_id = o.id
        LEFT JOIN knowledge_base kb ON kb.file_id = f.id
        WHERE o.id = p_organization_id
        GROUP BY o.id
    )
    INSERT INTO dashboard_stats (
        organization_id,
        total_knowledge_base_count,
        total_file_count,
        total_storage_used,
        last_activity_date
    )
    SELECT * FROM org_stats
    ON CONFLICT (organization_id) WHERE organization_id IS NOT NULL
    DO UPDATE SET
        total_knowledge_base_count = EXCLUDED.total_knowledge_base_count,
        total_file_count = EXCLUDED.total_file_count,
        total_storage_used = EXCLUDED.total_storage_used,
        last_activity_date = EXCLUDED.last_activity_date,
        last_updated = CURRENT_TIMESTAMP;"
[SQL: CREATE OR REPLACE FUNCTION update_organization_stats(p_organization_id integer)
RETURNS void AS $$
BEGIN
    WITH org_stats AS (
        SELECT 
            o.id as organization_id,
            COUNT(DISTINCT kb.id) as total_knowledge_base_count,
            COUNT(DISTINCT f.id) as total_file_count,
            COALESCE(SUM(f.file_size), 0) as total_storage_used,
            MAX(GREATEST(COALESCE(kb.updated_at, '1970-01-01'), COALESCE(f.updated_at, '1970-01-01'))) as last_activity_date
        FROM organizations o
        LEFT JOIN files f ON f.organization_id = o.id
        LEFT JOIN knowledge_base kb ON kb.file_id = f.id
        WHERE o.id = p_organization_id
        GROUP BY o.id
    )
    INSERT INTO dashboard_stats (
        organization_id,
        total_knowledge_base_count,
        total_file_count,
        total_storage_used,
        last_activity_date
    )
    SELECT * FROM org_stats
    ON CONFLICT (organization_id) WHERE organization_id IS NOT NULL
    DO UPDATE SET
        total_knowledge_base_count = EXCLUDED.total_knowledge_base_count,
        total_file_count = EXCLUDED.total_file_count,
        total_storage_used = EXCLUDED.total_storage_used,
        last_activity_date = EXCLUDED.last_activity_date,
        last_updated = CURRENT_TIMESTAMP;]
(Background on this error at: https://sqlalche.me/e/20/f405)
2025-03-05 23:52:06,734 INFO sqlalchemy.engine.Engine BEGIN (implicit)
2025-03-05 23:52:06,734 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-03-05 23:52:06,735 INFO sqlalchemy.engine.Engine END;
2025-03-05 23:52:06,735 - sqlalchemy.engine.Engine - INFO - END;
2025-03-05 23:52:06,735 INFO sqlalchemy.engine.Engine [cached since 2.021s ago] ()
2025-03-05 23:52:06,735 - sqlalchemy.engine.Engine - INFO - [cached since 2.021s ago] ()
2025-03-05 23:52:07,071 INFO sqlalchemy.engine.Engine COMMIT
2025-03-05 23:52:07,071 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-03-05 23:52:07,239 INFO sqlalchemy.engine.Engine BEGIN (implicit)
2025-03-05 23:52:07,239 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-03-05 23:52:07,239 INFO sqlalchemy.engine.Engine $$ LANGUAGE plpgsql;
2025-03-05 23:52:07,239 - sqlalchemy.engine.Engine - INFO - $$ LANGUAGE plpgsql;
2025-03-05 23:52:07,239 INFO sqlalchemy.engine.Engine [cached since 1.854s ago] ()
2025-03-05 23:52:07,239 - sqlalchemy.engine.Engine - INFO - [cached since 1.854s ago] ()
2025-03-05 23:52:07,743 INFO sqlalchemy.engine.Engine ROLLBACK
2025-03-05 23:52:07,743 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-03-05 23:52:07,911 - app.database.database_factory - ERROR - Error executing SQL statement: (sqlalchemy.dialects.postgresql.asyncpg.ProgrammingError) <class 'asyncpg.exceptions.PostgresSyntaxError'>: unterminated dollar-quoted string at or near "$$ LANGUAGE plpgsql;"
[SQL: $$ LANGUAGE plpgsql;]
(Background on this error at: https://sqlalche.me/e/20/f405)
2025-03-05 23:52:07,911 - app.database.database_factory - DEBUG - Failed SQL: $$ LANGUAGE plpgsql;
2025-03-05 23:52:07,911 - app.database.database_factory - WARNING - Error executing statement, continuing with next: (sqlalchemy.dialects.postgresql.asyncpg.ProgrammingError) <class 'asyncpg.exceptions.PostgresSyntaxError'>: unterminated dollar-quoted string at or near "$$ LANGUAGE plpgsql;"
[SQL: $$ LANGUAGE plpgsql;]
(Background on this error at: https://sqlalche.me/e/20/f405)
2025-03-05 23:52:07,911 INFO sqlalchemy.engine.Engine BEGIN (implicit)
2025-03-05 23:52:07,911 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-03-05 23:52:07,911 INFO sqlalchemy.engine.Engine SELECT manage_dashboard_stats_cron_jobs();
2025-03-05 23:52:07,911 - sqlalchemy.engine.Engine - INFO - SELECT manage_dashboard_stats_cron_jobs();
2025-03-05 23:52:07,912 INFO sqlalchemy.engine.Engine [generated in 0.00014s] ()
2025-03-05 23:52:07,912 - sqlalchemy.engine.Engine - INFO - [generated in 0.00014s] ()
2025-03-05 23:52:08,416 INFO sqlalchemy.engine.Engine ROLLBACK
2025-03-05 23:52:08,416 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-03-05 23:52:08,584 - app.database.database_factory - ERROR - Error executing SQL statement: (sqlalchemy.dialects.postgresql.asyncpg.ProgrammingError) <class 'asyncpg.exceptions.UndefinedFunctionError'>: function manage_dashboard_stats_cron_jobs() does not exist
HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
[SQL: SELECT manage_dashboard_stats_cron_jobs();]
(Background on this error at: https://sqlalche.me/e/20/f405)
2025-03-05 23:52:08,584 - app.database.database_factory - DEBUG - Failed SQL: SELECT manage_dashboard_stats_cron_jobs();
2025-03-05 23:52:08,584 - app.database.database_factory - WARNING - Error executing statement, continuing with next: (sqlalchemy.dialects.postgresql.asyncpg.ProgrammingError) <class 'asyncpg.exceptions.UndefinedFunctionError'>: function manage_dashboard_stats_cron_jobs() does not exist
HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
[SQL: SELECT manage_dashboard_stats_cron_jobs();]
(Background on this error at: https://sqlalche.me/e/20/f405)
2025-03-05 23:52:08,584 - app.database.database_factory - INFO - Completed executing SQL file: /home/runner/workspace/app/database/sql/update_dashboard_stats.sql
2025-03-05 23:52:08,584 - app.database.database_factory - INFO - Successfully initialized all database procedures
2025-03-05 23:52:08,584 INFO sqlalchemy.engine.Engine COMMIT
2025-03-05 23:52:08,584 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-03-05 23:52:08,750 - app.main - INFO - Database tables created successfully
2025-03-05 23:52:08,751 INFO sqlalchemy.engine.Engine BEGIN (implicit)
2025-03-05 23:52:08,751 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-03-05 23:52:08,751 INFO sqlalchemy.engine.Engine SELECT manage_dashboard_stats_cron_jobs()
2025-03-05 23:52:08,751 - sqlalchemy.engine.Engine - INFO - SELECT manage_dashboard_stats_cron_jobs()
2025-03-05 23:52:08,751 INFO sqlalchemy.engine.Engine [generated in 0.00014s] ()
2025-03-05 23:52:08,751 - sqlalchemy.engine.Engine - INFO - [generated in 0.00014s] ()
2025-03-05 23:52:08,751 INFO sqlalchemy.engine.Engine ROLLBACK
2025-03-05 23:52:08,751 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-03-05 23:52:09,255 - app.main - ERROR - Error setting up dashboard stats cron jobs: (sqlalchemy.dialects.postgresql.asyncpg.ProgrammingError) <class 'asyncpg.exceptions.UndefinedFunctionError'>: function manage_dashboard_stats_cron_jobs() does not exist
HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
[SQL: SELECT manage_dashboard_stats_cron_jobs()]
(Background on this error at: https://sqlalche.me/e/20/f405)
INFO:     Application startup complete.
INFO:     172.31.128.40:50000 - "GET /?initialPath=%2F&id=%3Arqq%3A HTTP/1.1" 200 OK